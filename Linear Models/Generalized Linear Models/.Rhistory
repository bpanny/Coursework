scale_fill_manual(values = c("red", "blue")) +
theme_classic() +
ggtitle("Pairwise Correlation Matrix of Variables with Sleep and without Sleep") +
xlab("Variables") +
ylab("Correlation") +
labs(fill = "With Sleep or Without Sleep")
# Plot the pairwise correlations as a bar plot
ggplot(data = cor_matrix, aes(x = rownames(cor_matrix), y = cor_matrix[, 1], fill = `With Sleep`) +
# Plot the pairwise correlations as a bar plot
ggplot(data = cor_matrix, aes(x = rownames(cor_matrix), y = cor_matrix[, 1], fill = `With Sleep`)) +
geom_bar(stat = "identity") +
scale_fill_manual(values = c("red", "blue")) +
theme_classic() +
ggtitle("Pairwise Correlation Matrix of Variables with Sleep and without Sleep") +
xlab("Variables") +
ylab("Correlation") +
labs(fill = "With Sleep or Without Sleep")
# Plot the pairwise correlations as a bar plot
ggplot(data = cor_matrix, aes(x = rownames(cor_matrix), y = cor_matrix[, 1])) +
geom_bar(stat = "identity") +
scale_fill_manual(values = c("red", "blue")) +
theme_classic() +
ggtitle("Pairwise Correlation Matrix of Variables with Sleep and without Sleep") +
xlab("Variables") +
ylab("Correlation") +
labs(fill = "With Sleep or Without Sleep")
# Plot the pairwise correlations as a bar plot
ggplot(data = cor_matrix, aes(x = rownames(cor_matrix), y = `With Sleep`, fill = `With Sleep`)) +
geom_bar(stat = "identity") +
scale_fill_manual(values = c("red", "blue")) +
theme_classic() +
ggtitle("Pairwise Correlation Matrix of Variables with Sleep and without Sleep") +
xlab("Variables") +
ylab("Correlation") +
labs(fill = "With Sleep or Without Sleep")
# Create a matrix to store the pairwise correlations
cor_matrix <- matrix(ncol = 2, nrow = length(cols_with_sleep))
colnames(cor_matrix) <- c("with_sleep", "without_sleep")
rownames(cor_matrix) <- cols_with_sleep
# Calculate the pairwise correlations
for (i in 1:length(cols_with_sleep)) {
cor_matrix[i, 1] <- cor(df[, cols_with_sleep[i]] %>% drop_na, df[, cols_without_sleep[i]] %>% drop_na)
cor_matrix[i, 2] <- cor(df[, cols_without_sleep[i]]%>% drop_na, df[, cols_with_sleep[i]]%>% drop_na)
}
cor_matrix
colnames(cor_matrix)
# Plot the pairwise correlations as a bar plot
ggplot(data = cor_matrix, aes(x = rownames(cor_matrix), y = cor_matrix[, 1])) +
geom_bar(stat = "identity") +
scale_fill_manual(values = c("red", "blue")) +
theme_classic() +
ggtitle("Pairwise Correlation Matrix of Variables with Sleep and without Sleep") +
xlab("Variables") +
ylab("Correlation") +
labs(fill = "With Sleep or Without Sleep")
# Plot the pairwise correlations as a bar plot
ggplot(data = cor_matrix, aes(x = rownames(cor_matrix), y = with_sleep)) +
geom_bar(stat = "identity") +
scale_fill_manual(values = c("red", "blue")) +
theme_classic() +
ggtitle("Pairwise Correlation Matrix of Variables with Sleep and without Sleep") +
xlab("Variables") +
ylab("Correlation") +
labs(fill = "With Sleep or Without Sleep")
cor_matrix
cor_matrix %>% glimpse
# Plot the pairwise correlations as a bar plot
ggplot(data = cor_matrix, aes(x = rownames(cor_matrix), y = "with_sleep")) +
geom_bar(stat = "identity") +
scale_fill_manual(values = c("red", "blue")) +
theme_classic() +
ggtitle("Pairwise Correlation Matrix of Variables with Sleep and without Sleep") +
xlab("Variables") +
ylab("Correlation") +
labs(fill = "With Sleep or Without Sleep")
# Plot the pairwise correlations as a bar plot
ggplot(data = cor_matrix, aes(x = rownames(cor_matrix), y = `"with_sleep"`)) +
geom_bar(stat = "identity") +
scale_fill_manual(values = c("red", "blue")) +
theme_classic() +
ggtitle("Pairwise Correlation Matrix of Variables with Sleep and without Sleep") +
xlab("Variables") +
ylab("Correlation") +
labs(fill = "With Sleep or Without Sleep")
cor_matrix
# Plot the pairwise correlations as a bar plot
ggplot(data = cor_matrix, aes(x = rownames(cor_matrix), y = with_sleep)) +
geom_bar(stat = "identity") +
scale_fill_manual(values = c("red", "blue")) +
theme_classic() +
ggtitle("Pairwise Correlation Matrix of Variables with Sleep and without Sleep") +
xlab("Variables") +
ylab("Correlation") +
labs(fill = "With Sleep or Without Sleep")
cor_matrix %>% glimpse
cor_matrix %>% as.tibble()
cor_matrix %>% as_tibble()
cor_matrix %>% as_tibble()[`,`]
cor_matrix %>% as_tibble()[1,]
cor_matrix %>% as_tibble()
cor_matrix %>% as_tibble() %>% glimpse
# Plot the pairwise correlations as a bar plot
ggplot(data = cor_matrix %>% as_tibble(), aes(x = rownames(cor_matrix), y = with_sleep)) +
geom_bar(stat = "identity") +
scale_fill_manual(values = c("red", "blue")) +
theme_classic() +
ggtitle("Pairwise Correlation Matrix of Variables with Sleep and without Sleep") +
xlab("Variables") +
ylab("Correlation") +
labs(fill = "With Sleep or Without Sleep")
# Plot the pairwise correlations as a bar plot
ggplot(data = cor_matrix %>% as_tibble(), aes(x = rownames(cor_matrix), y = with_sleep)) +
geom_bar(stat = "identity") +
scale_fill_manual(values = c("red", "blue")) +
theme_classic() +
hline(y = .95) +
ggtitle("Pairwise Correlation Matrix of Variables with Sleep and without Sleep") +
xlab("Variables") +
ylab("Correlation") +
labs(fill = "With Sleep or Without Sleep")
# Plot the pairwise correlations as a bar plot
ggplot(data = cor_matrix %>% as_tibble(), aes(x = rownames(cor_matrix), y = with_sleep)) +
geom_bar(stat = "identity") +
scale_fill_manual(values = c("red", "blue")) +
theme_classic() +
geom_hline(y = .95) +
ggtitle("Pairwise Correlation Matrix of Variables with Sleep and without Sleep") +
xlab("Variables") +
ylab("Correlation") +
labs(fill = "With Sleep or Without Sleep")
# Plot the pairwise correlations as a bar plot
ggplot(data = cor_matrix %>% as_tibble(), aes(x = rownames(cor_matrix), y = with_sleep)) +
geom_bar(stat = "identity") +
scale_fill_manual(values = c("red", "blue")) +
theme_classic() +
geom_hline(yintercept = .95) +
ggtitle("Pairwise Correlation Matrix of Variables with Sleep and without Sleep") +
xlab("Variables") +
ylab("Correlation") +
labs(fill = "With Sleep or Without Sleep")
# Plot the pairwise correlations as a bar plot
ggplot(data = cor_matrix %>% as_tibble(), aes(x = rownames(cor_matrix), y = with_sleep, fill = "003049")) +
geom_bar(stat = "identity") +
scale_fill_manual(values = c("red", "blue")) +
theme_classic() +
geom_hline(yintercept = .95, color = "red") +
ggtitle("Pairwise Correlation Matrix of Variables with Sleep and without Sleep") +
xlab("Variables") +
ylab("Correlation") +
labs(fill = "With Sleep or Without Sleep")
# Plot the pairwise correlations as a bar plot
ggplot(data = cor_matrix %>% as_tibble(), aes(x = rownames(cor_matrix), y = with_sleep, fill = 003049)) +
geom_bar(stat = "identity") +
scale_fill_manual(values = c("red", "blue")) +
theme_classic() +
geom_hline(yintercept = .95, color = "red") +
ggtitle("Pairwise Correlation Matrix of Variables with Sleep and without Sleep") +
xlab("Variables") +
ylab("Correlation") +
labs(fill = "With Sleep or Without Sleep")
# Plot the pairwise correlations as a bar plot
ggplot(data = cor_matrix %>% as_tibble(), aes(x = rownames(cor_matrix), y = with_sleep, fill = #003049)) +
# Plot the pairwise correlations as a bar plot
ggplot(data = cor_matrix %>% as_tibble(), aes(x = rownames(cor_matrix), y = with_sleep, fill = "#003049")) +
geom_bar(stat = "identity") +
scale_fill_manual(values = c("red", "blue")) +
theme_classic() +
geom_hline(yintercept = .95, color = "red") +
ggtitle("Pairwise Correlation Matrix of Variables with Sleep and without Sleep") +
xlab("Variables") +
ylab("Correlation") +
labs(fill = "With Sleep or Without Sleep")
# Plot the pairwise correlations as a bar plot
ggplot(data = cor_matrix %>% as_tibble(), aes(x = rownames(cor_matrix), y = with_sleep, fill = "#003049")) +
# Plot the pairwise correlations as a bar plot
ggplot(data = cor_matrix %>% as_tibble(), aes(x = rownames(cor_matrix), y = with_sleep, fill = "#003049")) +
geom_bar(stat = "identity") +
scale_fill_manual(values = c("red", "blue")) +
theme_classic() +
geom_hline(yintercept = .95, color = "red") +
ggtitle("Pairwise Correlation Matrix of Variables with Sleep and without Sleep") +
xlab("Variables") +
ylab("Correlation") +
labs(fill = "With Sleep or Without Sleep")
# Plot the pairwise correlations as a bar plot
ggplot(data = cor_matrix %>% as_tibble(), aes(x = rownames(cor_matrix), y = with_sleep, color = "ff5400", fill = "#ff0054")) +
geom_bar(stat = "identity") +
scale_fill_manual(values = c("red", "blue")) +
theme_classic() +
geom_hline(yintercept = .95, color = "red") +
ggtitle("Pairwise Correlation Matrix of Variables with Sleep and without Sleep") +
xlab("Variables") +
ylab("Correlation") +
labs(fill = "With Sleep or Without Sleep")
# Plot the pairwise correlations as a bar plot
ggplot(data = cor_matrix %>% as_tibble(), aes(x = rownames(cor_matrix), y = with_sleep, color = "ff5400", fill = "#ff0054")) +
geom_bar(stat = "identity") +
scale_fill_manual(values = c("red", "blue")) +
theme_classic() +
geom_hline(yintercept = .95, color = "blue") +
ggtitle("Pairwise Correlation Matrix of Variables with Sleep and without Sleep") +
xlab("Variables") +
ylab("Correlation") +
labs(fill = "With Sleep or Without Sleep")
cor_tbl.9 <- cor_matrix %>% as_tibble() %>% filter(with_sleep <.9)
cor_tbl.9
source("~/.active-rstudio-document", echo=TRUE)
cor_tbl.9 <- cor_matrix %>% filter(with_sleep <.9)
cor_matrix
set.seed(15213)
l <- replicate(5, runif(sample(1:10,1)))
result_mean <- numeric(length(l))
for(i in 1:length(l)){
result_mean[i] <- mean(l[[i]])
}
## print out your result
print(result_mean)
l
library(tidyverse)
library(mmrm)
library(emmeans)
library(aod)
createFeatureHistogramGrid <- function(data, plot_title, nrows=6, ncols=6) {
plot <- data %>%
pivot_longer(
cols = -c(pid, Index1),
names_to = "feature",
values_to = "value"
) %>%
ggplot() +
geom_histogram(aes(x = value), bins = 20) +
facet_wrap(~feature, nrow = nrows, ncol = ncols, scales = "free_x") +
labs(y = "Count", x = "Value", title = plot_title) +
theme_minimal()
return(plot)
}
createScatterplotGrid <- function(data, y_var, y_axis_title, plot_title, nrows=6, ncols=6) {
plot <- data %>%
pivot_longer(
cols = -c(pid, Index1, {{y_var}}),
names_to = "feature",
values_to = "value"
) %>%
ggplot() +
geom_point(aes(x = value, y = !! sym(y_var)), alpha = 0.7) +
facet_wrap(~feature, nrow = nrows, ncol = ncols, scales = "free_x") +
labs(y = y_axis_title, x = "Value", title = plot_title) +
theme_minimal()
return(plot)
}
createDensityPlotGrid <- function(data, plot_title, nrows = 6, ncols=5) {
plot <- data %>%
pivot_longer(
cols = -c(pid, timepoint_label),
names_to = "feature",
values_to = "value"
) %>%
ggplot() +
geom_density(aes(x = value, fill = timepoint_label), alpha = 0.5) +
facet_wrap(~feature, nrow = nrows, ncol = ncols, scales = "free") +
labs(x = "Value", y = "Density", fill = "Timepoint", title = "Distributions of new Fitbit features by time point") +
theme_minimal() +
theme(legend.position = "bottom")
return(plot)
}
saveMMRMOutput <- function(feature, test_interaction = FALSE) {
if (test_interaction == FALSE) {
model_formula <- as.formula(sprintf("perf_ecog ~ timepoint + %s + us(timepoint | pid)", feature))
} else {
model_formula <- as.formula(sprintf("perf_ecog ~ timepoint + %s + timepoint*%s + us(timepoint | pid)", feature, feature))
}
model_fit <- mmrm(model_formula, data = data_for_analysis, method = "Kenward-Roger")
model_summary <- summary(model_fit)
n_subjs <- model_summary$n_subjects
n_timepoints <- model_summary$n_timepoints
n_obs <- model_summary$n_obs
feature_coefs <- model_summary$coefficients[{{feature}}, ]
names(feature_coefs) <- c("beta_hat", "stderr", "df", "t", "p")
feature_confint <- confint(model_fit)[{feature}, ]
names(feature_confint) <- c("beta_hat_ci_lower", "beta_hat_ci_upper")
if (test_interaction == FALSE) {
timepoint_wald <- wald.test(vcov(model_fit), coef(model_fit), 2:3, verbose = TRUE)$result$chi2
names(timepoint_wald) <- paste0("timepoint_wald_", tolower(names(timepoint_wald)))
} else {
timepoint_wald <- wald.test(vcov(model_fit), coef(model_fit), 5:6, verbose = TRUE)$result$chi2
names(timepoint_wald) <- paste0("timepoint_interaction_wald_", tolower(names(timepoint_wald)))
}
model_results <- rbind(
as.matrix(c("n_subjs" = n_subjs, "n_timepoints" = n_timepoints, "n_obs" = n_obs)),
as.matrix(feature_coefs),
as.matrix(feature_confint),
as.matrix(timepoint_wald)
)
model_results <- model_results %>%
as_tibble(rownames = "rownames")
colnames(model_results) <- c("metric", {{feature}})
return(model_results)
}
data_for_analysis <- read_csv(here::here("data/fitbit_rhythms_new_features_long_20230205.csv")) %>%
# correct a typo in this feature name
rename(sumdurationactivity5to10minutes_with_sleep = sumdurationactivity5to105minutes_with_sleep,
sumdurationactivity5to10minutes = sumdurationactivity5to105minutes) %>%
# time and subject identifiers must be factors for mmrm
mutate(timepoint = factor(Index1)) %>%
mutate(pid_factor = factor(pid)) %>%
# rescale unitless proportion features from [0,1] to [0, 100] for better interpretability of regression coefficients
mutate(
activetosedentarytransitionprobability_with_sleep_0_100 = activetosedentarytransitionprobability_with_sleep*100,
ginicoefficient_with_sleep_0_100 = ginicoefficient_with_sleep*100,
activetosedentarytransitionprobability_0_100 = activetosedentarytransitionprobability*100,
ginicoefficient_0_100 = ginicoefficient*100
)
rbinom(10,.5)
rbinom(n = 100, 50, .5)
rbinom(1, 50, .5)
dist <- rbinom(n= 10000, 100, .5)
dist
quartile(dist)
qbinom(.05, 100, .5)
qbinom(.025, 100, .5)
qbinom(.0975, 100, .5)
qbinom(.975, 100, .5)
getwd()
setwd("../Desktop/Biostats School/Spring 2023/Applied Regression Analysis/HW - 10, 11, 12/")
knitr::opts_chunk$set(echo = TRUE)
data <- read_csv("DA4.csv")
library(tidyverse)
library(tidyverse)
data <- read_csv("DA4.csv")
setwd("../HW - 10, 11, 12/")
getwd()
data <- read_csv("DA4.csv")
setwd('C:/Users/benja/Desktop/Biostats School/Spring 2023/Applied Regression Analysis/HW - 10, 11, 12/')
getwd()
library(tidyverse)
data <- read_csv("DA4.csv")
library(tidyverse)
data <- read_csv("DA4.csv")
dat <- read_csv("DA4.csv")
dat %>% glimpse
library(tidyverse)
dat <- read_csv("DA4.csv") %>% mutate(race = factor(race, levels=c(1,2), labels=c("white","black")),
dpros = factor(dpros, levels=1:4, labels=c("no nodule","left","right","bilobar")),
dcaps = factor(dcaps, levels=1:2, labels=c("no","yes")))
dat %>% glimpse
dat %>% mutate(age_c = age - median(age),
psa_c = psa - median(psa),
vol_c = vol - median(vol),
gleason_c = gleason - median(gleason))
dat %>% glimpse
dat <- dat %>% mutate(age_c = age - median(age),
psa_c = psa - median(psa),
vol_c = vol - median(vol),
gleason_c = gleason - median(gleason))
dat %>% glimpse
glm_1 <- glm(capsule ~ dpros + gleason_c + psa_c, data = dat, family = "binomial")
glm_2 <- glm(capsule ~ dpros + gleason_c + psa_c + dcap, data = dat, family = "binomial")
glm_1 <- glm(capsule ~ dpros + gleason_c + psa_c, data = dat, family = "binomial")
glm_2 <- glm(capsule ~ dpros + gleason_c + psa_c + dcaps, data = dat, family = "binomial")
glm_3 <- glm(capsule ~ dpros + gleason_c + psa_c + vol_c, data = dat, family = "binomial")
glm_4 <- glm(capsule ~ dpros + gleason_c + psa_c + age_c, data = dat, family = "binomial")
glm_5 <- glm(capsule ~ dpros + gleason_c + psa_c + race, data = dat, family = "binomial")
glm_6 <- glm(capsule ~ dpros + gleason_c + psa_c + vol_c + race, data = dat, family = "binomial")
glm_7 <- glm(capsule ~ dpros + gleason_c + psa_c + dcaps + vol_c + age_c + race, data = dat, family = "binomial")
glm_1
broom::glance(glm_1)
tab <- tribble(~ Model, ~Covariates, ~Deviance, ~`Pseudo R2`, ~`adj Pseudo R2`, ~AIC, ~BIC,
1, str_c(colnames(glm_1$model)[-1], collapse = ", "),
deviance(glm_1), DescTools::PseudoR2(glm_1, which="McFadden"), DescTools::PseudoR2(glm_1, which="McFaddenAdj"), AIC(glm_1), BIC(glm_1),
2, str_c(colnames(glm_2$model)[-1], collapse = ", "),
deviance(glm_2), DescTools::PseudoR2(glm_2, which="McFadden"), DescTools::PseudoR2(glm_2, which="McFaddenAdj"), AIC(glm_2), BIC(glm_2),
3, str_c(colnames(glm_3$model)[-1], collapse = ", "),
deviance(glm_3), DescTools::PseudoR2(glm_3, which="McFadden"), DescTools::PseudoR2(glm_3, which="McFaddenAdj"), AIC(glm_3), BIC(glm_3),
4, str_c(colnames(glm_4$model)[-1], collapse = ", "),
deviance(glm_4), DescTools::PseudoR2(glm_4, which="McFadden"), DescTools::PseudoR2(glm_4, which="McFaddenAdj"), AIC(glm_4), BIC(glm_4),
5, str_c(colnames(glm_5$model)[-1], collapse = ", "),
deviance(glm_5), DescTools::PseudoR2(glm_5, which="McFadden"), DescTools::PseudoR2(glm_5, which="McFaddenAdj"), AIC(glm_5), BIC(glm_5),
6, str_c(colnames(glm_6$model)[-1], collapse = ", "),
deviance(glm_6), DescTools::PseudoR2(glm_6, which="McFadden"), DescTools::PseudoR2(glm_6, which="McFaddenAdj"), AIC(glm_6), BIC(glm_6),
7, str_c(colnames(glm_7$model)[-1], collapse = ", "),
deviance(glm_7), DescTools::PseudoR2(glm_7, which="McFadden"), DescTools::PseudoR2(glm_7, which="McFaddenAdj"), AIC(glm_7), BIC(glm_7),)
install.packages("DescTools")
tab <- tribble(~ Model, ~Covariates, ~Deviance, ~`Pseudo R2`, ~`adj Pseudo R2`, ~AIC, ~BIC,
1, str_c(colnames(glm_1$model)[-1], collapse = ", "),
deviance(glm_1), DescTools::PseudoR2(glm_1, which="McFadden"), DescTools::PseudoR2(glm_1, which="McFaddenAdj"), AIC(glm_1), BIC(glm_1),
2, str_c(colnames(glm_2$model)[-1], collapse = ", "),
deviance(glm_2), DescTools::PseudoR2(glm_2, which="McFadden"), DescTools::PseudoR2(glm_2, which="McFaddenAdj"), AIC(glm_2), BIC(glm_2),
3, str_c(colnames(glm_3$model)[-1], collapse = ", "),
deviance(glm_3), DescTools::PseudoR2(glm_3, which="McFadden"), DescTools::PseudoR2(glm_3, which="McFaddenAdj"), AIC(glm_3), BIC(glm_3),
4, str_c(colnames(glm_4$model)[-1], collapse = ", "),
deviance(glm_4), DescTools::PseudoR2(glm_4, which="McFadden"), DescTools::PseudoR2(glm_4, which="McFaddenAdj"), AIC(glm_4), BIC(glm_4),
5, str_c(colnames(glm_5$model)[-1], collapse = ", "),
deviance(glm_5), DescTools::PseudoR2(glm_5, which="McFadden"), DescTools::PseudoR2(glm_5, which="McFaddenAdj"), AIC(glm_5), BIC(glm_5),
6, str_c(colnames(glm_6$model)[-1], collapse = ", "),
deviance(glm_6), DescTools::PseudoR2(glm_6, which="McFadden"), DescTools::PseudoR2(glm_6, which="McFaddenAdj"), AIC(glm_6), BIC(glm_6),
7, str_c(colnames(glm_7$model)[-1], collapse = ", "),
deviance(glm_7), DescTools::PseudoR2(glm_7, which="McFadden"), DescTools::PseudoR2(glm_7, which="McFaddenAdj"), AIC(glm_7), BIC(glm_7),)
tab %>%
mutate(across(where(is.numeric), ~signif(., digits = 4))) %>%
knitr::kable(.) %>% kableExtra::kable_styling(latex_options = "striped")
anova(glm_1, glm_3, test="LRT")
coef(summary(glm)3)
coef(summary(glm_3)
coef(summary(glm_3))
coef(summary(glm_3))
glm_1_exp_coef <- exp(coef(glm))
glm_1_exp_coef <- exp(coef(glm_1))
glm_1_exp_coef
glm_1_exp_coef * 2
glm_1_exp_coef * 5
glm_1_exp_coef * c(1,2,3,4,5,6)
glm_1_exp_coef * 1
glm_1_exp_coef * c(1,2,3,4,5,6)
glm_1_exp_coef * 1
c(1,2,3,4,5,6)
glm_1_exp_coef * c(1,2,3,4,5,6)
dat %>% glimpse
unique(dat$dpros)
glm_1_exp_coef * c(1,1,0,0,6,1.4)
glm_1_exp_coef * c(1,1,0,0,6,1.4)
sum(glm_1_exp_coef * c(1,1,0,0,6,1.4))
glm_1
coef(glm_1)
exp(coef(glm_1))
glm_1
new_dat <- tibble(gleason_c = 6 - median(dat$gleason), dpros="left", psa_c = 1.4 - median(dat$psa))
predict(glm_1, newdata=new_dat, type="response")
new_dat <- tibble(gleason_c = 6 - median(dat$gleason), dpros="left", psa_c = 1.4 - median(dat$psa))
predict(glm_1, newdata=new_dat, type="response")
dat %>% glimpse
predict(glm_1, newdata=new_dat)
predict(glm_1, newdata=new_dat, type = "response")
dat %>% glimpse
glm_1
unique(dat$dpros)
unique(dat$dpros)
glm_1
performance::performance_hosmer(glm_1, n_bins = 10)
install.packages("performance")
performance::performance_hosmer(glm_1, n_bins = 10)
source("alr_utility.R")
alr_plot_residual(glm_1, x="predicted")
?rm
rm(glm_1_exp_coef)
alr_plot_leverage(glm_1, x="predicted", label=dat$ID)
dat
alr_plot_leverage(glm_1, x="predicted", label=dat$id)
alr_high_leverage(glm_1, show_leverage = TRUE, label=dat$id, label_name="patient")
alr_plot_cookd(glm_1, x="predicted", label=dat$id)
(high_influence <- alr_plot_cookd(glm_1, x="predicted", label=dat$id))
(high_influence <-  alr_influential_cookd(glm_1, show_cookd = TRUE, label=dat$id, label_name="patient"))
(high_leverage <- alr_high_leverage(glm_1, show_leverage = TRUE, label=dat$id, label_name="patient"))
possible_removal <- high_infl %>% full_join(high_leverage, by="patient") %>% drop_na()
possible_removal <- high_influence %>% full_join(high_leverage, by="patient") %>% drop_na()
possible_removal %>%
knitr::kable(caption = "Observations For Possible Removal") %>%
kableExtra::kable_styling(latex_options = "striped")
knitr::opts_chunk$set(echo = TRUE)
tab %>%
mutate(across(where(is.numeric), ~signif(., digits = 4))) %>%
knitr::kable(.) %>% kableExtra::kable_styling(latex_options = "striped")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
source("alr_utility.R")
dat <- read_csv("DA4.csv") %>% mutate(race = factor(race, levels=c(1,2), labels=c("white","black")),
dpros = factor(dpros, levels=1:4, labels=c("no nodule","left","right","bilobar")),
dcaps = factor(dcaps, levels=1:2, labels=c("no","yes")))
dat <- dat %>% mutate(age_c = age - median(age),
psa_c = psa - median(psa),
vol_c = vol - median(vol),
gleason_c = gleason - median(gleason))
glm_1 <- glm(capsule ~ dpros + gleason_c + psa_c, data = dat, family = "binomial")
glm_2 <- glm(capsule ~ dpros + gleason_c + psa_c + dcaps, data = dat, family = "binomial")
glm_3 <- glm(capsule ~ dpros + gleason_c + psa_c + vol_c, data = dat, family = "binomial")
glm_4 <- glm(capsule ~ dpros + gleason_c + psa_c + age_c, data = dat, family = "binomial")
glm_5 <- glm(capsule ~ dpros + gleason_c + psa_c + race, data = dat, family = "binomial")
glm_6 <- glm(capsule ~ dpros + gleason_c + psa_c + vol_c + race, data = dat, family = "binomial")
glm_7 <- glm(capsule ~ dpros + gleason_c + psa_c + dcaps + vol_c + age_c + race, data = dat, family = "binomial")
tab <- tribble(~ Model, ~Covariates, ~Deviance, ~`Pseudo R2`, ~`adj Pseudo R2`, ~AIC, ~BIC,
1, str_c(colnames(glm_1$model)[-1], collapse = ", "),
deviance(glm_1), DescTools::PseudoR2(glm_1, which="McFadden"), DescTools::PseudoR2(glm_1, which="McFaddenAdj"), AIC(glm_1), BIC(glm_1),
2, str_c(colnames(glm_2$model)[-1], collapse = ", "),
deviance(glm_2), DescTools::PseudoR2(glm_2, which="McFadden"), DescTools::PseudoR2(glm_2, which="McFaddenAdj"), AIC(glm_2), BIC(glm_2),
3, str_c(colnames(glm_3$model)[-1], collapse = ", "),
deviance(glm_3), DescTools::PseudoR2(glm_3, which="McFadden"), DescTools::PseudoR2(glm_3, which="McFaddenAdj"), AIC(glm_3), BIC(glm_3),
4, str_c(colnames(glm_4$model)[-1], collapse = ", "),
deviance(glm_4), DescTools::PseudoR2(glm_4, which="McFadden"), DescTools::PseudoR2(glm_4, which="McFaddenAdj"), AIC(glm_4), BIC(glm_4),
5, str_c(colnames(glm_5$model)[-1], collapse = ", "),
deviance(glm_5), DescTools::PseudoR2(glm_5, which="McFadden"), DescTools::PseudoR2(glm_5, which="McFaddenAdj"), AIC(glm_5), BIC(glm_5),
6, str_c(colnames(glm_6$model)[-1], collapse = ", "),
deviance(glm_6), DescTools::PseudoR2(glm_6, which="McFadden"), DescTools::PseudoR2(glm_6, which="McFaddenAdj"), AIC(glm_6), BIC(glm_6),
7, str_c(colnames(glm_7$model)[-1], collapse = ", "),
deviance(glm_7), DescTools::PseudoR2(glm_7, which="McFadden"), DescTools::PseudoR2(glm_7, which="McFaddenAdj"), AIC(glm_7), BIC(glm_7),)
tab %>%
mutate(across(where(is.numeric), ~signif(., digits = 4))) %>%
knitr::kable(.) %>% kableExtra::kable_styling(latex_options = "striped")
anova(glm_1, glm_3, test="LRT")
new_dat <- tibble(gleason_c = 6 - median(dat$gleason), dpros="left", psa_c = 1.4 - median(dat$psa))
predict(glm_1, newdata=new_dat, type = "response")
performance::performance_hosmer(glm_1, n_bins = 10)
alr_plot_residual(glm_1, x="predicted")
alr_plot_leverage(glm_1, x="predicted", label=dat$id)
(high_leverage <- alr_high_leverage(glm_1, show_leverage = TRUE, label=dat$id, label_name="patient"))
alr_plot_cookd(glm_1, x="predicted", label=dat$id)
(high_influence <-  alr_influential_cookd(glm_1, show_cookd = TRUE, label=dat$id, label_name="patient"))
possible_removal <- high_influence %>% full_join(high_leverage, by="patient") %>% drop_na()
possible_removal %>%
knitr::kable(caption = "Observations For Possible Removal") %>%
kableExtra::kable_styling(latex_options = "striped")
tab %>%
mutate(across(where(is.numeric), ~signif(., digits = 4))) %>%
knitr::kable(.) %>% kableExtra::kable_styling(latex_options = "striped")
