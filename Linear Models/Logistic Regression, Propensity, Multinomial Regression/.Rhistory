knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
source("alr_utility.R")
dat <- read_csv("DA4.csv") %>% mutate(capsule = factor(capsule, levels=c(0,1),
labels=c("no", "yes")),
race = factor(race, levels=c(1,2),
labels=c("white","black")),
dpros = factor(dpros, levels=1:4,
labels=c("no nodule","left",
"right","bilobar")),
dcaps = factor(dcaps, levels=1:2,
labels=c("no","yes")))
rocobj <- pROC::roc(DAT10$ni=="Yes", predict(fit), ret="coords")
rocobj <- pROC::roc(dat$capsule=="yes", predict(glm_3), ret="coords")
glm_3 <- glm(capsule ~ dpros + gleason_c + psa_c + vol_c, data = dat, family = "binomial")
dat <- dat %>% mutate(age_c = age - median(age),
psa_c = psa - median(psa),
vol_c = vol - median(vol),
gleason_c = gleason - median(gleason))
glm_3 <- glm(capsule ~ dpros + gleason_c + psa_c + vol_c, data = dat, family = "binomial")
rocobj <- pROC::roc(dat$capsule=="yes", predict(glm_3), ret="coords")
pROC::ggroc(rocobj, legacy.axes=TRUE) +
geom_segment(aes(x = 0, xend = 1, y = 0, yend = 1),
color="grey", linetype="dashed")
pROC::auc(rocobj)
rocobj <- pROC::roc(dat$capsule=="yes", predict(glm_3), ret="coords")
pROC::ggroc(rocobj, legacy.axes=TRUE) +
geom_segment(aes(x = 0, xend = 1, y = 0, yend = 1),
color="grey", linetype="dashed")
pROC::auc(rocobj)
(prob <- dat %>% mutate(predict = predict(glm_3, type="response")) %>%
group_by(ni) %>% summarize(value=mean(predict > 0.5)))
(prob <- dat %>% mutate(predict = predict(glm_3, type="response")) %>%
group_by(capsule) %>% summarize(value=mean(predict > 0.5)))
dat$dpros
multi_fit <- nnet::multinom(dpros ~ race + dcaps + age_c + psa_c + vol_c + gleason_c, data = dat)
sum_fit <- summary(multi_fit)
## calculate z-score
z <- sum_fit$coefficients/sum_fit$standard.errors
# Calculate the two tailed p-value
(p <- (pnorm(abs(z), lower.tail=FALSE)) * 2)
# Calculate the two tailed p-value
format((p <- (pnorm(abs(z), lower.tail=FALSE)) * 2),scientific=F)
z
sum_fit <- summary(multi_fit)
## calculate z-score
z <- sum_fit$coefficients/sum_fit$standard.errors
# Calculate the two tailed p-value
format((p <- (pnorm(abs(z), lower.tail=FALSE)) * 2),scientific=F)
z
generalhoslem::logitgof(dat$dpros, fitted(multi_fit), g = 10, ord = FALSE)
install.packages("generalhoslem")
generalhoslem::logitgof(dat$dpros, fitted(multi_fit), g = 10, ord = FALSE)
multi_fit <- nnet::multinom(dpros ~ race + dcaps + age_c + gleason_c, data = dat)
(rrr <- exp(coef(multi_fit_2)[,-1]))
multi_fit_2 <- nnet::multinom(dpros ~ race + dcaps + age_c + gleason_c, data = dat)
(rrr <- exp(coef(multi_fit_2)[,-1]))
generalhoslem::logitgof(dat$dpros, fitted(multi_fit_2), g = 10, ord = FALSE)
getwd()
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
source("alr_utility.R")
dat <- read_csv("DA4.csv") %>% mutate(capsule = factor(capsule, levels=c(0,1),
labels=c("no", "yes")),
race = factor(race, levels=c(1,2),
labels=c("white","black")),
dpros = factor(dpros, levels=1:4,
labels=c("no nodule","left",
"right","bilobar")),
dcaps = factor(dcaps, levels=1:2,
labels=c("no","yes")))
dat <- dat %>% mutate(age_c = age - median(age),
psa_c = psa - median(psa),
vol_c = vol - median(vol),
gleason_c = gleason - median(gleason))
glm_3 <- glm(capsule ~ dpros + gleason_c + psa_c + vol_c, data = dat, family = "binomial")
rocobj <- pROC::roc(dat$capsule=="yes", predict(glm_3), ret="coords")
pROC::ggroc(rocobj, legacy.axes=TRUE) +
geom_segment(aes(x = 0, xend = 1, y = 0, yend = 1),
color="grey", linetype="dashed")
pROC::auc(rocobj)
(prob <- dat %>% mutate(predict = predict(glm_3, type="response")) %>%
group_by(capsule) %>% summarize(value=mean(predict > 0.5)))
multi_fit <- nnet::multinom(dpros ~ race + dcaps + age_c + psa_c + vol_c + gleason_c, data = dat)
sum_fit <- summary(multi_fit)
## calculate z-score
z <- sum_fit$coefficients/sum_fit$standard.errors
# Calculate the two tailed p-value
format((p <- (pnorm(abs(z), lower.tail=FALSE)) * 2),scientific=F)
z
generalhoslem::logitgof(dat$dpros, fitted(multi_fit), g = 10, ord = FALSE)
multi_fit_2 <- nnet::multinom(dpros ~ dcaps + age_c + gleason_c, data = dat)
(rrr <- exp(coef(multi_fit_2)[,-1]))
generalhoslem::logitgof(dat$dpros, fitted(multi_fit_2), g = 10, ord = FALSE)
