xlab("Variables") +
ylab("Correlation") +
labs(fill = "With Sleep or Without Sleep")
# Plot the pairwise correlations as a bar plot
ggplot(data = cor_matrix %>% as_tibble(), aes(x = rownames(cor_matrix), y = with_sleep, color = "ff5400", fill = "#ff0054")) +
geom_bar(stat = "identity") +
scale_fill_manual(values = c("red", "blue")) +
theme_classic() +
geom_hline(yintercept = .95, color = "red") +
ggtitle("Pairwise Correlation Matrix of Variables with Sleep and without Sleep") +
xlab("Variables") +
ylab("Correlation") +
labs(fill = "With Sleep or Without Sleep")
# Plot the pairwise correlations as a bar plot
ggplot(data = cor_matrix %>% as_tibble(), aes(x = rownames(cor_matrix), y = with_sleep, color = "ff5400", fill = "#ff0054")) +
geom_bar(stat = "identity") +
scale_fill_manual(values = c("red", "blue")) +
theme_classic() +
geom_hline(yintercept = .95, color = "blue") +
ggtitle("Pairwise Correlation Matrix of Variables with Sleep and without Sleep") +
xlab("Variables") +
ylab("Correlation") +
labs(fill = "With Sleep or Without Sleep")
cor_tbl.9 <- cor_matrix %>% as_tibble() %>% filter(with_sleep <.9)
cor_tbl.9
source("~/.active-rstudio-document", echo=TRUE)
cor_tbl.9 <- cor_matrix %>% filter(with_sleep <.9)
cor_matrix
set.seed(15213)
l <- replicate(5, runif(sample(1:10,1)))
result_mean <- numeric(length(l))
for(i in 1:length(l)){
result_mean[i] <- mean(l[[i]])
}
## print out your result
print(result_mean)
l
library(tidyverse)
library(mmrm)
library(emmeans)
library(aod)
createFeatureHistogramGrid <- function(data, plot_title, nrows=6, ncols=6) {
plot <- data %>%
pivot_longer(
cols = -c(pid, Index1),
names_to = "feature",
values_to = "value"
) %>%
ggplot() +
geom_histogram(aes(x = value), bins = 20) +
facet_wrap(~feature, nrow = nrows, ncol = ncols, scales = "free_x") +
labs(y = "Count", x = "Value", title = plot_title) +
theme_minimal()
return(plot)
}
createScatterplotGrid <- function(data, y_var, y_axis_title, plot_title, nrows=6, ncols=6) {
plot <- data %>%
pivot_longer(
cols = -c(pid, Index1, {{y_var}}),
names_to = "feature",
values_to = "value"
) %>%
ggplot() +
geom_point(aes(x = value, y = !! sym(y_var)), alpha = 0.7) +
facet_wrap(~feature, nrow = nrows, ncol = ncols, scales = "free_x") +
labs(y = y_axis_title, x = "Value", title = plot_title) +
theme_minimal()
return(plot)
}
createDensityPlotGrid <- function(data, plot_title, nrows = 6, ncols=5) {
plot <- data %>%
pivot_longer(
cols = -c(pid, timepoint_label),
names_to = "feature",
values_to = "value"
) %>%
ggplot() +
geom_density(aes(x = value, fill = timepoint_label), alpha = 0.5) +
facet_wrap(~feature, nrow = nrows, ncol = ncols, scales = "free") +
labs(x = "Value", y = "Density", fill = "Timepoint", title = "Distributions of new Fitbit features by time point") +
theme_minimal() +
theme(legend.position = "bottom")
return(plot)
}
saveMMRMOutput <- function(feature, test_interaction = FALSE) {
if (test_interaction == FALSE) {
model_formula <- as.formula(sprintf("perf_ecog ~ timepoint + %s + us(timepoint | pid)", feature))
} else {
model_formula <- as.formula(sprintf("perf_ecog ~ timepoint + %s + timepoint*%s + us(timepoint | pid)", feature, feature))
}
model_fit <- mmrm(model_formula, data = data_for_analysis, method = "Kenward-Roger")
model_summary <- summary(model_fit)
n_subjs <- model_summary$n_subjects
n_timepoints <- model_summary$n_timepoints
n_obs <- model_summary$n_obs
feature_coefs <- model_summary$coefficients[{{feature}}, ]
names(feature_coefs) <- c("beta_hat", "stderr", "df", "t", "p")
feature_confint <- confint(model_fit)[{feature}, ]
names(feature_confint) <- c("beta_hat_ci_lower", "beta_hat_ci_upper")
if (test_interaction == FALSE) {
timepoint_wald <- wald.test(vcov(model_fit), coef(model_fit), 2:3, verbose = TRUE)$result$chi2
names(timepoint_wald) <- paste0("timepoint_wald_", tolower(names(timepoint_wald)))
} else {
timepoint_wald <- wald.test(vcov(model_fit), coef(model_fit), 5:6, verbose = TRUE)$result$chi2
names(timepoint_wald) <- paste0("timepoint_interaction_wald_", tolower(names(timepoint_wald)))
}
model_results <- rbind(
as.matrix(c("n_subjs" = n_subjs, "n_timepoints" = n_timepoints, "n_obs" = n_obs)),
as.matrix(feature_coefs),
as.matrix(feature_confint),
as.matrix(timepoint_wald)
)
model_results <- model_results %>%
as_tibble(rownames = "rownames")
colnames(model_results) <- c("metric", {{feature}})
return(model_results)
}
data_for_analysis <- read_csv(here::here("data/fitbit_rhythms_new_features_long_20230205.csv")) %>%
# correct a typo in this feature name
rename(sumdurationactivity5to10minutes_with_sleep = sumdurationactivity5to105minutes_with_sleep,
sumdurationactivity5to10minutes = sumdurationactivity5to105minutes) %>%
# time and subject identifiers must be factors for mmrm
mutate(timepoint = factor(Index1)) %>%
mutate(pid_factor = factor(pid)) %>%
# rescale unitless proportion features from [0,1] to [0, 100] for better interpretability of regression coefficients
mutate(
activetosedentarytransitionprobability_with_sleep_0_100 = activetosedentarytransitionprobability_with_sleep*100,
ginicoefficient_with_sleep_0_100 = ginicoefficient_with_sleep*100,
activetosedentarytransitionprobability_0_100 = activetosedentarytransitionprobability*100,
ginicoefficient_0_100 = ginicoefficient*100
)
getwd()
setwd("../Desktop/Biostats School/Spring 2023/Applied Regression Analysis/HW - 7, 8, 9/")
knitr::opts_chunk$set(echo = TRUE)
```{r, load_packages}
```{r, load_packages}
library(tidyverse)
library(tidyverse)
library(GGally)
library(table1)
dat <- read_csv('DA2.csv', show_col_types = FALSE)
dat %>% glimpse
?mfp
mlm_1 <- lm(bloodtol ~ newppm + age, data = dat)
source("alr_utility.R")
alr_plot_ccpr(mlm_1, smooth=c("lowess", "mSpline"), variable=c("newppm", "age"))
alr_plot_ccpr(mlm_1, smooth=c("lowess", "mSpline"), variable=c("newppm", "age"))
alr_plot_ccpr(mlm_1, smooth=c("lowess", "mSpline"), variable=c("newppm", "age"))
dat
dat %>% summary
?mfp
mfp_1 <- mfp(bloodtol ~ fp(age) + fp(newppm), data=dat, verbose=T)
library(mfp)
mfp_1 <- mfp(bloodtol ~ fp(age) + fp(newppm), df = 4, data=dat, verbose=T)
mfp_1 <- mfp(bloodtol ~ fp(age) + fp(newppm), data=dat, verbose=T)
alr_plot_ccpr(mlm_1, smooth=c("lowess", "mSpline"), spline_df = 4, variable=c("newppm", "age"))
alr_plot_ccpr(mlm_1, smooth=c("mSpline"), spline_df = 4, variable=c("newppm", "age"))
alr_plot_ccpr(mfp_1, smooth=c("mSpline"), spline_df = 4, variable=c("newppm", "age"))
mfp_1
class(mfp_1)
alr_plot_ccpr(mfp_1, smooth=c("mSpline"), spline_df = 4, variable=c("newppm", "age"))
mfp_1$fit
?mfp
alr_plot_ccpr(mfp_1, smooth=c("mSpline"), spline_df = 4, variable=c("newppm", "age"))
crange
library(tidyverse)
library(GGally)
library(table1)
library(mfp)
source("alr_utility.R")
library(tidyverse)
library(GGally)
library(table1)
library(mfp)
source("alr_utility.R")
dat2 <- read_csv('DA2.csv', show_col_types = FALSE)
dat2 <- read_csv('DA2.csv', show_col_types = FALSE)
dat2 %>% glimpse
mlm_1 <- lm(bloodtol ~ newppm + age, data = dat2)
alr_plot_ccpr(mlm_1, smooth=c("lowess", "mSpline"), spline_df = 4, variable=c("newppm", "age"))
mfp_1 <- mfp(bloodtol ~ fp(age) + fp(newppm), data=dat2, verbose=T)
alr_plot_ccpr(mfp_1, smooth=c("mSpline"), spline_df = 4, variable=c("newppm", "age"))
mfp$x
mfp_1$x
mfp$x %>% select(where(is.numeric))
mfp_1$x %>% select(where(is.numeric))
as_tibble(mfp_1$x) %>% select(where(is.numeric))
as_tibble(mfp_1$x) %>% select(where(is.numeric)) %>% mutate(e = resid(fit))
as_tibble(mfp_1$x) %>% select(where(is.numeric)) %>% mutate(e = resid(mfp_1))
mfp_1 %>% summary
mfp_1$x
alr_plot_ccpr(mfp_1, smooth=c("mSpline"), spline_df = 4, variable=c("newppm.1", "newppm.2", "age.1"))
alr_plot_ccpr(mfp_1, smooth=c("mSpline"), spline_df = 4)
alr_plot_ccpr(mfp_1, smooth=c("mSpline"), spline_df = 4, variable=c("newppm.1"))
alr_plot_ccpr(mfp_1, smooth=c("mSpline"), spline_df = 4)
mfp_1$fit
mfp_1$formula
mfp_1
mfp_1
getOption()
options
options()
alr_plot_ccpr(mfp_1, smooth=c("mSpline"), spline_df = 4)
lm(mfp$formula, dat = dat2)
lm(mfp_1$formula, dat = dat2)
lm(mfp_1$formula, dat = dat2) %>% summary
alr_plot_ccpr(mfp_1, smooth=c("mSpline"), spline_df = 4) + scale_y_continuous(limits = c(0,1))
alr_plot_ccpr(mfp_1, smooth=c("mSpline"), spline_df = 4)
dat3 <- read_csv("DA3.CSV") %>%
rename(tax=x1, bathrooms=x2, lot=x3,
living=x4, garage=x5, rooms=x6, bedrooms=x7,
age=x8, fireplace=x9, price=y)
mlm_2 <- dat3 %>% lm(price ~ tax + rooms + age)
mlm_2 <- lm(price ~ tax + rooms + age, data = dat3)
mlm_2 %>% summary
alr_plot_ccpr(mlm_2)
predict(mlm_1)
predict(dat2$newppm, predict(mlm_1))
plot(dat2$newppm, predict(mlm_1))
plot(dat2$newppm, predict(mlm_2))
plot(dat2$newppm, predict(mfp_1))
plot(dat2$newppm/100^2, predict(mfp_1))
dat3$price
ggpairs(dat3)
?I
I(x^2)
I(2^2)
I(dat3$tax^2)
plot(dat3$tax, dat3$price)
alr_plot_ccpr(lm(mfp_1$formula, data=dat2))
alr_plot_ccpr(lm(mfp_1$formula, data=dat2))
alr_plot_ccpr(mlm_2)
alr_plot_ccpr(lm(mfp_1$formula,data=dat2), smooth=c("mSpline"), spline_df = 4)
dat3 %>% colnames
mlm_3 <- lm(price ~ tax, data = dat3)
mlm_3 <- lm(price ~ tax, data = dat3)
mlm_3 %>% summary
mlm_2 <- lm(price ~ tax + rooms + age, data = dat3)
mlm_2 %>% summary
alr_plot_ccpr(mlm_3)
dat3 %>% colnames
mlm_4 <- lm(price ~ ., data = dat3)
mlm_4
mlm_4 <- lm(price ~ ., data = dat3)
mlm_4 %>% summary
car::vif(mlm_4)
anova(mlm_4)
mlm_5 <- lm(price ~ . - bedrooms - rooms, data = dat3)
mlm_5 %>% summary
mlm_5 %>% car::vif
mlm_5 %>% car::vif()
mlm_5 <- lm(price ~ . - tax - bedrooms - rooms, data = dat3)
mlm_5 %>% summary
mlm_5 <- lm(price ~ . - bedrooms - rooms, data = dat3)
mlm_5 %>% summary
mlm_5 <- lm(price ~ . -tax - bedrooms - rooms, data = dat3)
mlm_5 %>% summary
mlm_5 <- lm(price ~ . - tax, data = dat3)
mlm_5 %>% summary
mlm_5 <- lm(price ~ . - tax - bathrooms, data = dat3)
mlm_5 %>% summary
dat3 %>% summary
mlm_5 %>% summary
mlm_5 %>% car::vif()
mlm_5 <- lm(price ~ . - tax - bathrooms - rooms, data = dat3)
mlm_5 %>% summary
mlm_5 <- lm(price ~ . - bathrooms - rooms, data = dat3)
mlm_5 %>% summary
mlm_5 %>% car::vif()
ggpairs(dat3)
dat3 %>% cor()
dat3 %>% cor() > .8
dat3 %>% (cor() > .8, value = TRUE)
dat3 %>% (cor() > .8)
dat3 %>% cor() > .8
mlm_5 <- lm(price ~ . - bathrooms - rooms, data = dat3)
mlm_5 %>% summary
mlm_5 %>% car::vif()
car::vif(mlm_4)
mlm_5 <- lm(price ~ . - bedrooms - rooms, data = dat3)
mlm_5 %>% summary
lm(price ~ rooms, data = dat3)
lm(price ~ rooms, data = dat3) %>% summary
lm(price ~ rooms, data = dat3) %>% summary
lm(price ~ rooms, data = dat3) %>% summary
lm(price ~ rooms, data = dat3) %>% summary
lm(price ~ bedrooms, data = dat3) %>% summary
lm(price ~ rooms, data = dat3) %>% summary
lm(price ~ bedrooms, data = dat3) %>% summary
mlm_5 <- lm(price ~ . - rooms, data = dat3)
mlm_5 %>% summary
mlm_5 %>% car::vif()
mlm_4 %>% summary
mlm_5 <- lm(price ~ . - rooms, data = dat3)
mlm_5 %>% car::vif()
mlm_5 %>% car::vif()
mlm_5 <- lm(price ~ . - rooms, data = dat3)
mlm_5 %>% summary
mlm_5 %>% car::vif()
mlm_5 <- lm(price ~ . - bedrooms, data = dat3)
mlm_5 %>% summary
mlm_5 %>% summary
mlm_5 %>% car::vif()
mlm_5 <- lm(price ~ . - bedrooms, data = dat3)
mlm_5 %>% summary
mlm_5 %>% car::vif()
car::vif(mlm_4)
dat3 %>% cor() > .8
mlm_5 <- lm(price ~ . - bedrooms - rooms, data = dat3)
mlm_5 %>% summary
mlm_5 %>% car::vif()
mlm_6 %>% summary
mlm_6 <- lm(price ~ . - bedrooms - rooms, data = dat3)
mlm_6 %>% car::vif()
mlm_5 <- lm(price ~ . - bedrooms, data = dat3)
mlm_5 %>% summary
mlm_5 %>% car::vif()
mlm_6 <- lm(price ~ . - bedrooms - rooms, data = dat3)
mlm_6 %>% summary
mlm_6 %>% car::vif()
mlm_7 <- lm(price ~ . - taxes, data = dat3)
mlm_7 <- lm(price ~ . - tax, data = dat3)
mlm_7 %>% summary
mlm_7 %>% summary
mlm_7 %>% car::vif()
mlm_7 <- lm(price ~ . - tax - rooms, data = dat3)
mlm_7 %>% summary
mlm_7 %>% car::vif()
mlm_7 <- lm(price ~ . - tax - bedrooms, data = dat3)
mlm_7 %>% summary
mlm_7 <- lm(price ~ . - tax - rooms, data = dat3)
mlm_7 %>% summary
mlm_7 <- lm(price ~ . - tax - bedrooms, data = dat3)
mlm_7 %>% summary
mlm_2 %>% summary
mlm_3 %>% summary
summary(dat3)
dat3 %>% glimpse
lm_backselect <- step(lm(price ~ ., data = dat3), direction = "backward")
lm_backselect <- step(lm(price ~ ., data = dat3), direction = "backward")
lm_backselect <- step(lm(price ~ ., data = dat3), direction = "backward", trace = FALSE)
summary(lm_backselect)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(GGally)
library(table1)
library(mfp)
source("alr_utility.R")
dat2 <- read_csv('DA2.csv', show_col_types = FALSE)
dat2 %>% glimpse
mlm_1 <- lm(bloodtol ~ newppm + age, data = dat2)
alr_plot_ccpr(mlm_1, smooth=c("lowess", "mSpline"), spline_df = 4, variable=c("newppm", "age"))
mfp_1 <- mfp(bloodtol ~ fp(age) + fp(newppm), data=dat2, verbose=T)
alr_plot_ccpr(lm(mfp_1$formula,data=dat2), smooth=c("mSpline"), spline_df = 4)
dat3 <- read_csv("DA3.CSV") %>%
rename(tax=x1, bathrooms=x2, lot=x3,
living=x4, garage=x5, rooms=x6, bedrooms=x7,
age=x8, fireplace=x9, price=y)
mlm_2 <- lm(price ~ tax + rooms + age, data = dat3)
mlm_2 %>% summary
alr_plot_ccpr(mlm_2)
mlm_3 <- lm(price ~ tax, data = dat3)
mlm_3 %>% summary
alr_plot_ccpr(mlm_3)
mlm_4 <- lm(price ~ ., data = dat3)
mlm_4 %>% summary
anova(mlm_4)
car::vif(mlm_4)
dat3 %>% cor() > .8
lm(price ~ rooms, data = dat3) %>% summary
lm(price ~ bedrooms, data = dat3) %>% summary
mlm_5 <- lm(price ~ . - bedrooms, data = dat3)
mlm_5 %>% summary
mlm_5 %>% car::vif()
mlm_6 <- lm(price ~ . - bedrooms - rooms, data = dat3)
mlm_6 %>% summary
mlm_6 %>% car::vif()
lm_backselect <- step(lm(price ~ ., data = dat3), direction = "backward", trace = FALSE)
summary(lm_backselect)
# lasso
fit_lasso <- cv.glmnet(glucose ~ BMI + exercise + factor(raceth) + age10 + factor(smoking) + factor(drinkany) + factor(physact) + factor(globrat) + factor(medcond) , data = DAT7, alpha = 1)
library(glmnet)
library(glmnetUtils)
install.packages('glmnetUtils')
library(glmnet)
library(glmnetUtils)
# lasso
fit_lasso <- cv.glmnet(glucose ~ BMI + exercise + factor(raceth) + age10 + factor(smoking) + factor(drinkany) + factor(physact) + factor(globrat) + factor(medcond) , data = DAT7, alpha = 1)
library(glmnet)
library(glmnetUtils)
# lasso
fit_lasso <- cv.glmnet(price ~ ., data = dat3, alpha = 1)
coef_lasso <- coef(fit_lasso) # selected coefficients
# Elastic Net
fit_elastic <- cv.glmnet(price ~ ., data = dat3, alpha = 0.5)
coef_elastic <- coef(fit_elastic)
fit_lasso %>% summary
fit_lasso$lambda%>% summary
coef_elastic %>% summary
coef_elastic
fit_elastic$cvm
fit_elastic$cvsd
fit_elastic$terms
?tribble
coef_backSelect <- coef(lm_backSelect)
coef_backSelect <- coef(lm_backselect)
tibble(variable = rownames(coef_lasso), LASSO = coef_lasso[,1]) %>%
filter(LASSO != 0) %>%
full_join(tibble(variable = rownames(coef_elastic),
`Elastic Net` = coef_elastic[,1]) %>%
filter(`Elastic Net` != 0),
by="variable")  %>%
full_join(tibble(variable = names(coef_backSelect),
`Backward` = coef_backSelect),
by="variable") %>%
full_join(tibble(variable = names(coef_backSelect_BIC),
`Backward BIC` = coef_backSelect_BIC),
by="variable")
?cv.glmnet
?cv.glmnet
coef_backSelect <- coef(lm_backselect)
tibble(variable = rownames(coef_lasso), LASSO = coef_lasso[,1]) %>%
filter(LASSO != 0) %>%
full_join(tibble(variable = rownames(coef_elastic),
`Elastic Net` = coef_elastic[,1]) %>%
filter(`Elastic Net` != 0),
by="variable")  %>%
full_join(tibble(variable = names(coef_backSelect),
`Backward` = coef_backSelect),
by="variable")
lm_backselect_BIC <- step(lm(price ~ ., data = dat3), direction = "backward", k = log(NROW(dat3)), trace = FALSE)
lm_backselect <- step(lm(price ~ ., data = dat3), direction = "backward", trace = FALSE)
lm_backselect_BIC <- step(lm(price ~ ., data = dat3), direction = "backward", k = log(NROW(dat3)), trace = FALSE)
library(glmnet)
library(glmnetUtils)
# lasso
fit_lasso <- cv.glmnet(price ~ ., data = dat3, alpha = 1)
coef_lasso <- coef(fit_lasso) # selected coefficients
# Elastic Net
fit_elastic <- cv.glmnet(price ~ ., data = dat3, alpha = 0.5)
coef_elastic <- coef(fit_elastic)
fit_elastic
coef_elastic
coef_backSelect <- coef(lm_backselect)
coef_backSelect_BIC <- coef(lm_backselect_BIC)
tibble(variable = rownames(coef_lasso), LASSO = coef_lasso[,1]) %>%
filter(LASSO != 0) %>%
full_join(tibble(variable = rownames(coef_elastic),
`Elastic Net` = coef_elastic[,1]) %>%
filter(`Elastic Net` != 0),
by="variable")  %>%
full_join(tibble(variable = names(coef_backSelect),
`Backward` = coef_backSelect),
by="variable")
lm_backselect$anova
coef_backSelect <- coef(lm_backselect)
coef_backSelect_BIC <- coef(lm_backselect_BIC)
tibble(variable = rownames(coef_lasso), LASSO = coef_lasso[,1]) %>%
filter(LASSO != 0) %>%
full_join(tibble(variable = rownames(coef_elastic),
`Elastic Net` = coef_elastic[,1]) %>%
filter(`Elastic Net` != 0),
by="variable")  %>%
full_join(tibble(variable = names(coef_backSelect),
`Backward` = coef_backSelect),
by="variable")
coef_backSelect <- coef(lm_backselect)
coef_backSelect_BIC <- coef(lm_backselect_BIC)
tibble(variable = rownames(coef_lasso), LASSO = coef_lasso[,1]) %>%
filter(LASSO != 0) %>%
full_join(tibble(variable = rownames(coef_elastic),
`Elastic Net` = coef_elastic[,1]) %>%
filter(`Elastic Net` != 0),
by="variable")  %>%
full_join(tibble(variable = names(coef_backSelect),
`Backward` = coef_backSelect),
by="variable")  %>%
full_join(tibble(variable = names(coef_backSelect_BIC),
`Backward BIC` = coef_backSelect_BIC),
by="variable")
coef_backSelect <- coef(lm_backselect)
coef_backSelect_BIC <- coef(lm_backselect_BIC)
tibble(variable = rownames(coef_lasso), LASSO = coef_lasso[,1]) %>%
filter(LASSO != 0) %>%
full_join(tibble(variable = rownames(coef_elastic),
`Elastic Net` = coef_elastic[,1]) %>%
filter(`Elastic Net` != 0),
by="variable")  %>%
full_join(tibble(variable = names(coef_backSelect),
`Backward` = coef_backSelect),
by="variable")  %>%
full_join(tibble(variable = names(coef_backSelect_BIC),
`Backward BIC` = coef_backSelect_BIC),
by="variable")
lm_LASSO <- lm(price ~ tax + bathrooms, data = dat3)
lm_elastic <- lm(price ~ tax + bathrooms + lot + living, data = dat3)
lm_backward <- lm(price ~ tax + bathrooms + garage + bedrooms, data = dat3)
lm_backward_BIC <- lm(price ~ tax + bathrooms + garage + bedrooms, data = dat3)
tribble(~model, ~AIC, ~BIC, ~`adj R2`, ~R2,
"LASSO", AIC(lm_LASSO), BIC(lm_LASSO),
summary(lm_LASSO)$adj.r.squared,
summary(lm_LASSO)$r.squared,
"Elastic Net", AIC(lm_elastic),BIC(lm_elastic),
summary(lm_elastic)$adj.r.squared,
summary(lm_elastic)$r.squared,
"Backward Selection (AIC)", AIC(lm_backward),BIC(lm_backward),
summary(lm_backward)$adj.r.squared,
summary(lm_backward)$r.squared,
"Backward Selection (BIC)",
AIC(lm_backward_BIC),BIC(lm_backward_BIC),
summary(lm_backward_BIC)$adj.r.squared,
summary(lm_backward_BIC)$r.squared)
