haz %>% count(visit)
haz %>% count(visit) %>% geom_bar
haz %>% count(visit)
wide_haz
wide_haz %>% count(id)
wide_haz %>% filter(id==3)
haz %>% filter(id==3)
haz %>% filter(stunt == 1 & haz <=-2)
haz %>% filter(stunt == 1 & haz >=-2)
wide_haz <- haz %>%
select(id, haz, visit) %>%
group_by(id) %>%
pivot_wider(names_from = "visit",
names_prefix = "age",
values_from = "haz") %>%
ungroup()
md.pattern(wide_haz[,2:ncol(wide_haz)])
haz %>%
group_by(ses, visit) %>%
summarise_at(vars(haz), list(min=min,
Q1=~quantile(., probs = 0.25),
median=median,
Q3=~quantile(., probs = 0.75),
max=max,
n=~length(.),
mean=mean,
sd=sd), na.rm = T)
haz %>%
ggplot(aes(x = as.factor(ses), y = haz, fill = as.factor(visit))) +
geom_boxplot() +
labs(title = "Boxplot of y per week per group",x = "Treatment", y = "y") +
scale_fill_brewer(palette = "Blues") +
theme_classic()
haz %>%
ggplot(aes(x = as.factor(ses), y = haz, fill = as.factor(visit))) +
geom_boxplot() +
labs(title = "Boxplot of Height-to-Age Z-Score per Visit per SES Status",x = "SES", y = "Height-to-age Z-score") +
theme_classic()
haz %>%
ggplot(aes(x = as.factor(visit), y = haz, fill = as.factor(ses))) +
geom_boxplot() +
labs(title = "Boxplot of Height-to-Age Z-Score per Visit per SES Status",x = "SES", y = "Height-to-age Z-score") +
theme_classic()
haz %>%
mutate(ses = if_else(ses == 0, "Low", "High")) %>%
ggplot(aes(x = as.factor(visit), y = haz, fill = as.factor(ses))) +
geom_boxplot() +
labs(title = "Boxplot of Height-to-Age Z-Score per Visit per SES Status",x = "Visit / Age (Months)", y = "Height-to-age Z-score") +
theme_classic()
haz %>%
mutate(ses = if_else(ses == 0, "Low", "High")) %>%
ggplot(aes(x = as.factor(visit), y = haz, fill = as.factor(ses))) +
geom_boxplot() +
labs(title = "Boxplot of Height-to-Age Z-Score per Visit per SES Status",x = "Visit / Age (Months)", y = "Height-to-age Z-score") +
labs(fill = "SES") +
theme_classic()
?geom_boxplot
haz %>%
mutate(ses = if_else(ses == 0, "Low", "High")) %>%
ggplot(aes(x = as.factor(visit), y = haz, fill = as.factor(ses))) +
geom_boxplot() +
geom_point(aes(y = mean(haz)))
haz %>%
mutate(ses = if_else(ses == 0, "Low", "High")) %>%
ggplot(aes(x = as.factor(visit), y = haz, fill = as.factor(ses))) +
geom_boxplot() +
geom_point(aes(y = mean(haz), shape = as.factor(ses)))
haz %>%
mutate(ses = if_else(ses == 0, "Low", "High")) %>%
ggplot(aes(x = as.factor(visit), y = haz, fill = as.factor(ses))) +
geom_boxplot() +
geom_point(aes(y = mean(haz), fill = as.factor(ses)))
haz %>%
mutate(ses = if_else(ses == 0, "Low", "High")) %>%
group_by(ses, visit) %>%
ggplot(aes(x = as.factor(visit), y = mean(haz), fill = as.factor(ses))) +
geom_boxplot() +
geom_point(aes(y = mean(haz), fill = as.factor(ses)))
haz %>%
mutate(ses = if_else(ses == 0, "Low", "High")) %>%
group_by(ses, visit) %>%
summarise(avg = mean(haz, na.rm = TRUE),
stdev = sd(haz, na.rm = TRUE) / sqrt(n() - sum(is.na(haz)))) %>%
ggplot(aes(x = visit, y = avg, color = factor(ses)))+
geom_point()+
geom_line()+
geom_errorbar(aes(ymin = avg - stdev, ymax = avg + stdev)) +
labs(color = "SES", x = "Visit / Age (~months)", y = "Average Height-to-Age Z-Score")
haz %>%
mutate(ses = if_else(ses == 0, "Low", "High")) %>%
ggplot(aes(x = as.factor(visit), y = haz, fill = as.factor(ses))) +
geom_boxplot() +
geom_point(aes(y = mean(haz), fill = as.factor(ses)))
labs(title = "Boxplot of Height-to-Age Z-Score per Visit per SES Status",x = "Visit / Age (Months)", y = "Height-to-age Z-score") +
labs(fill = "SES") +
theme_classic()
haz %>%
mutate(ses = if_else(ses == 0, "Low", "High")) %>%
ggplot(aes(x = as.factor(visit), y = haz, fill = as.factor(ses))) +
geom_boxplot() +
geom_point(aes(y = mean(haz), fill = as.factor(ses))) +
labs(title = "Boxplot of Height-to-Age Z-Score per Visit per SES Status",x = "Visit / Age (Months)", y = "Height-to-age Z-score") +
labs(fill = "SES") +
theme_classic()
haz %>%
mutate(ses = if_else(ses == 0, "Low", "High")) %>%
ggplot(aes(x = as.factor(visit), y = haz, fill = as.factor(ses))) +
geom_boxplot() +
labs(title = "Boxplot of Height-to-Age Z-Score per Visit per SES Status",x = "Visit / Age (Months)", y = "Height-to-age Z-score") +
labs(fill = "SES") +
theme_classic()
haz %>%
mutate(ses = if_else(ses == 0, "Low", "High")) %>%
ggplot(aes(x = as.factor(visit), y = haz, fill = as.factor(ses))) +
geom_boxplot() +
labs(title = "Boxplot of Height-to-Age Z-Score per Visit per SES Status",x = "Visit / Age (Months)", y = "Height-to-age Z-score") +
labs(fill = "SES") +
theme_classic()
haz %>%
mutate(ses = if_else(ses == 0, "Low", "High")) %>%
ggplot(aes(x = haz, fill = as.factor(ses))) +
geom_density() +
facet_wrap(~visit)+
labs(title = "Boxplot of Height-to-Age Z-Score per Visit per SES Status",x = "Visit / Age (Months)", y = "Height-to-age Z-score") +
labs(fill = "SES") +
theme_classic()
cor(haz_wide[, 2:ncol(haz_wide)], use = "complete.obs")
cor(wide_haz[, 2:ncol(wide_haz)], use = "complete.obs")
cor(wide_haz[, 2:ncol(wide_haz)], use = "complete.obs") %>%
corrplot::corrplot()
cor(wide_haz[, 2:ncol(wide_haz)], use = "complete.obs") %>% corrplot::corrplot(type = "upper")
?corrplot::corrplot()
cor(wide_haz[, 2:ncol(wide_haz)], use = "complete.obs") %>% corrplot::corrplot(type = "upper", hclust.method = "ward.D2")
cor(wide_haz[, 2:ncol(wide_haz)], use = "complete.obs") %>% corrplot::corrplot(type = "upper", hclust.method = "ward.D2", addshade = "positive")
cor(wide_haz[, 2:ncol(wide_haz)], use = "complete.obs") %>% corrplot::corrplot(type = "upper", is.corr = FALSE)
cor(wide_haz[, 2:ncol(wide_haz)], use = "complete.obs")
cor(wide_haz[, 2:ncol(wide_haz)], use = "complete.obs") %>% corrplot::corrplot(type = "upper", is.corr = FALSE)
wide_haz_low <- haz %>%
filter(ses == 0) %>%
select(id, haz, visit) %>%
group_by(id) %>%
pivot_wider(names_from = "visit",
names_prefix = "age",
values_from = "haz")
md.pattern(wide_haz_low[,2:ncol(wide_haz_low)])
haz %>% count(visit, ses) %>% ggplot(aes(x = visit, y = n, fill = ses)) + geom_bar()
haz %>% count(visit, ses) %>% ggplot(aes(x = visit, y = n, fill = ses)) + geom_col()
haz %>% count(visit, ses) %>% ggplot(aes(x = visit, y = n, group = sese, fill = ses)) + geom_col()
haz %>% count(visit, ses) %>% ggplot(aes(x = visit, y = n, group = ses, fill = ses)) + geom_col()
haz %>% count(visit, ses) %>% ggplot(aes(x = visit, y = n)) + facet_wrap(~ses) + geom_col()
haz %>% count(visit, ses) %>% ggplot(aes(x = visit, y = n, fill = ses)) + geom_col()
haz %>% count(visit, ses) %>% ggplot(aes(x = visit, y = n, fill = factor(ses))) + geom_col()
haz %>% count(gender)
haz %>%
mutate(ses = if_else(ses == 0, "Low", "High")) %>%
ggplot(aes(x = as.factor(visit), y = haz, fill = as.factor(ses))) +
geom_boxplot() +
labs(title = "Boxplot of Height-to-Age Z-Score per Visit per SES Status",x = "Visit / Age (Months)", y = "Height-to-age Z-score") +
labs(fill = "SES") +
theme_classic()
haz %>%
mutate(ses = if_else(ses == 0, "Low", "High")) %>%
ggplot(aes(x = haz, fill = as.factor(ses))) +
geom_density() +
facet_wrap(~visit)+
labs(title = "Densities of Height-to-Age Z-Score per Visit per SES Status",x = "Height-to-age Z-score", y = "Height-to-age Z-score Density") +
labs(fill = "SES") +
theme_classic()
haz %>%
mutate(ses = if_else(gender == 0, "Female", "Male")) %>%
ggplot(aes(x = haz, fill = as.factor(ses))) +
geom_density() +
facet_wrap(~visit)+
labs(title = "Densities of Height-to-Age Z-Score per Visit per SES Status",x = "Height-to-age Z-score", y = "Height-to-age Z-score Density") +
labs(fill = "SES") +
theme_classic()
haz %>%
mutate(ses = if_else(ses == 0, "Low", "High")) %>%
ggplot(aes(x = as.factor(visit), y = haz, fill = as.factor(ses))) +
geom_boxplot() +
labs(title = "Boxplot of Height-to-Age Z-Score per Visit per SES Status",x = "Visit / Age (Months)", y = "Height-to-age Z-score") +
labs(fill = "SES") +
theme_classic()
haz %>%
mutate(ses = if_else(ses == 0, "Low", "High")) %>%
ggplot(aes(x = haz, fill = as.factor(ses))) +
geom_density() +
facet_wrap(~visit)+
labs(title = "Densities of Height-to-Age Z-Score per Visit per SES Status",x = "Height-to-age Z-score", y = "Height-to-age Z-score Density") +
labs(fill = "SES") +
theme_classic()
haz %>%
mutate(ses = if_else(gender == 0, "Female", "Male")) %>%
ggplot(aes(x = haz, fill = as.factor(gender))) +
geom_density() +
facet_wrap(~visit)+
labs(title = "Densities of Height-to-Age Z-Score per Visit per SES Status",x = "Height-to-age Z-score", y = "Height-to-age Z-score Density") +
labs(fill = "SES") +
theme_classic()
haz %>%
mutate(ses = if_else(ses == 0, "Low", "High")) %>%
ggplot(aes(x = as.factor(visit), y = haz, fill = as.factor(ses))) +
geom_boxplot() +
labs(title = "Boxplot of Height-to-Age Z-Score per Visit per SES Status",x = "Visit / Age (Months)", y = "Height-to-age Z-score") +
labs(fill = "SES") +
theme_classic()
haz %>%
mutate(ses = if_else(ses == 0, "Low", "High")) %>%
ggplot(aes(x = haz, fill = as.factor(ses))) +
geom_density() +
facet_wrap(~visit)+
labs(title = "Densities of Height-to-Age Z-Score per Visit per SES Status",x = "Height-to-age Z-score", y = "Height-to-age Z-score Density") +
labs(fill = "SES") +
theme_classic()
haz %>%
mutate(ses = if_else(gender == 0, "Female", "Male")) %>%
ggplot(aes(x = haz, fill = as.factor(gender))) +
geom_density() +
facet_wrap(~visit)+
labs(title = "Densities of Height-to-Age Z-Score per Visit per Gender",x = "Height-to-age Z-score", y = "Height-to-age Z-score Density") +
labs(fill = "Gender") +
theme_classic()
haz %>%
mutate(ses = if_else(ses == 0, "Low", "High")) %>%
ggplot(aes(x = as.factor(visit), y = haz, fill = as.factor(ses))) +
geom_boxplot() +
labs(title = "Boxplot of Height-to-Age Z-Score per Visit per SES Status",x = "Visit / Age (Months)", y = "Height-to-age Z-score") +
labs(fill = "SES") +
theme_classic()
haz %>%
mutate(ses = if_else(ses == 0, "Low", "High")) %>%
ggplot(aes(x = haz, fill = as.factor(ses))) +
geom_density() +
facet_wrap(~visit)+
labs(title = "Densities of Height-to-Age Z-Score per Visit per SES Status",x = "Height-to-age Z-score", y = "Height-to-age Z-score Density") +
labs(fill = "SES") +
theme_classic()
haz %>%
mutate(ses = if_else(gender == 0, "Female", "Male")) %>%
ggplot(aes(x = haz, fill = as.factor(gender))) +
geom_density(alpha = .5) +
facet_wrap(~visit)+
labs(title = "Densities of Height-to-Age Z-Score per Visit per Gender",x = "Height-to-age Z-score", y = "Height-to-age Z-score Density") +
labs(fill = "Gender") +
theme_classic()
haz %>% glimpse
fit_gee_ar1 <- geeglm(haz ~ visit*haz + I(visit^2),
data = schiz_long, id = id, family = gaussian, corstr = "ar1")
library(tidyverse)
library(VIM); library(mice)
library(gee)
install.packages("gee")
BiocManager::install("gee")
install.packages("gee")
install.packages("geepack")
BiocManager::install("geeM")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(VIM); library(mice)
library(gee)
library(geepack)
library(geeM)
library(multcomp)
fit_gee_ar1 <- geeglm(haz ~ visit*haz + I(visit^2),
data = schiz_long, id = id, family = gaussian, corstr = "ar1")
fit_gee_ar1 <- geeglm(haz ~ visit*haz + I(visit^2),
data = haz, id = id, family = gaussian, corstr = "ar1")
summary(fit_gee_ar1)
fit_gee_ar1 <- geeglm(haz ~ visit*ses + gender + I(visit^2),
data = haz, id = id, family = gaussian, corstr = "ar1")
summary(fit_gee_ar1)
fit_gee_ar1 <- geeglm(haz ~ visit*ses + gender + I(visit^2),
data = haz, id = id, family = gaussian, corstr = "ar1")
summary(fit_gee_ar1)
summary(fit_gee_ar1)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(VIM); library(mice)
library(gee)
library(geepack)
library(geeM)
# library(multcomp)
# library(lmtest)
# library(sandwich)
haz <- read_csv("hazdata.csv")
fit_gee_ar1$coefficients
coefficients <- fit_gee_ar1$coefficients %>% as.vector()
coefficients
# Apply the function to each row and bind the result to the dataframe
df <- df %>%
mutate(expected = pmap_dfr(list(visit, ses, gender, visit2, visit_by_ses),
function(...) expected(..., coefficients)))
expected <- function(visit, ses, gender, visit2, visit_by_ses, coefficients)
exp <- coefficients[1] + coefficients[2]*visit + coefficients[3]*ses +
coefficients[4]*gender + coefficients[5]*visit2 + coefficients[6]*visit_by_ses
# Define your variables
visit <- c(0, 4, 8, 12, 16, 20, 24)
ses <- c(0, 1)
gender <- 1
coefficients <- fit_gee_ar1$coefficients %>% as.vector()
# Create a dataframe
df <- expand.grid(visit = visit, ses = ses) %>%
mutate(gender = gender,
visit2 = visit^2,
visit_by_ses = visit*ses)
# Apply the function to each row and bind the result to the dataframe
df <- df %>%
mutate(expected = pmap_dfr(list(visit, ses, gender, visit2, visit_by_ses),
function(...) expected(..., coefficients)))
df
expected <- function(visit, ses, gender, visit2, visit_by_ses, coefficients)
exp <- coefficients[1] + coefficients[2]*visit + coefficients[3]*ses +
coefficients[4]*gender + coefficients[5]*visit2 + coefficients[6]*visit_by_ses
# Define your variables
visit <- c(0, 4, 8, 12, 16, 20, 24)
ses <- c(0, 1)
gender <- 1
coefficients <- fit_gee_ar1$coefficients %>% as.vector()
# Create a dataframe
df <- expand.grid(visit = visit, ses = ses) %>%
mutate(gender = gender,
visit2 = visit^2,
visit_by_ses = visit*ses)
# Apply the function to each row and bind the result to the dataframe
pmap_dfr(list(visit, ses, gender, visit2, visit_by_ses),
expected(coefficients=coefficients))
# Apply the function to each row and bind the result to the dataframe
pmap(df, expected, coefficients)
df
# Apply the function to each row and bind the result to the dataframe
pmap_dfr(df, expected, coefficients)
# Apply the function to each row and bind the result to the dataframe
pmap(df, expected, coefficients) %>% unlist()
# Apply the function to each row and bind the result to the dataframe
pmap(df[1], expected, coefficients) %>% unlist()
# Apply the function to each row and bind the result to the dataframe
pmap(df[1,], expected, coefficients) %>% unlist()
# Apply the function to each row and bind the result to the dataframe
pmap(df, expected, coefficients) %>% unlist()
# Apply the function to each row and bind the result to the dataframe
pmap(df, expected, coefficients) %>% unlist() %>% cbind(df, .)
# Apply the function to each row and bind the result to the dataframe
pmap(df, expected, coefficients) %>% unlist() %>% cbind(df, . = hi)
# Apply the function to each row and bind the result to the dataframe
pmap(df, expected, coefficients) %>% unlist() %>% cbind(df, hi = .)
# Apply the function to each row and bind the result to the dataframe
pmap(df, expected, coefficients) %>% unlist() %>% cbind(df, expected_haz = .)
summary(fit_gee_ar1)
expected <- function(visit, ses, gender, visit2, visit_by_ses, coefficients)
exp <- coefficients[1] + coefficients[2]*visit + coefficients[3]*ses +
coefficients[4]*gender + coefficients[5]*visit2 + coefficients[6]*visit_by_ses
visit <- c(0, 4, 8, 12, 16, 20, 24)
ses <- c(0, 1)
gender <- 1
coefficients <- fit_gee_ar1$coefficients %>% as.vector()
df <- expand.grid(visit = visit, ses = ses) %>%
mutate(gender = gender,
visit2 = visit^2,
visit_by_ses = visit*ses)
pmap(df, expected, coefficients) %>%
unlist() %>%
cbind(df, expected_haz = .) %>%
kableExtra::kable() %>%
kableExtra::kable_styling()
expected <- function(visit, ses, gender, visit2, visit_by_ses, coefficients)
exp <- coefficients[1] + coefficients[2]*visit + coefficients[3]*ses +
coefficients[4]*gender + coefficients[5]*visit2 + coefficients[6]*visit_by_ses
visit <- c(0, 4, 8, 12, 16, 20, 24)
ses <- c(0, 1)
gender <- 1
coefficients <- fit_gee_ar1$coefficients %>% as.vector()
df <- expand.grid(visit = visit, ses = ses) %>%
mutate(gender = gender,
visit2 = visit^2,
visit_by_ses = visit*ses)
pmap(df, expected, coefficients) %>%
unlist() %>%
cbind(df, expected_haz = .) %>%
mutate(gender = if_else(gender == 0, "Female", "Male"),
ses = if_else(ses == 0, "Low", "High")) %>%
kableExtra::kable() %>%
kableExtra::kable_styling()
cbind(fit_gee_ar1$coefficients)
rbind(fit_gee_ar1$coefficients)
tibble(rbind(fit_gee_ar1$coefficients))
tibble(rbind(fit_gee_ar1$coefficients))
rbind(fit_gee_ar1$coefficients)
rbind(fit_gee_ar1$coefficients) %>% names
rbind(fit_gee_ar1$coefficients) %>% colnames
rbind(fit_gee_ar1$coefficients) %>%
kableExtra::kable()
pmap(df, expected, cf) %>%
unlist() %>%
cbind(df, expected_haz = .) %>%
mutate(gender = if_else(gender == 0, "Female", "Male"),
ses = if_else(ses == 0, "Low", "High")) %>%
kableExtra::kable() %>%
kableExtra::kable_styling()
expected <- function(visit, ses, gender, visit2, visit_by_ses, coefficients)
exp <- coefficients[1] + coefficients[2]*visit + coefficients[3]*ses +
coefficients[4]*gender + coefficients[5]*visit2 + coefficients[6]*visit_by_ses
visit <- c(0, 4, 8, 12, 16, 20, 24)
ses <- c(0, 1)
gender <- 1
cf <- fit_gee_ar1$coefficients %>% as.vector()
df <- expand.grid(visit = visit, ses = ses) %>%
mutate(gender = gender,
visit2 = visit^2,
visit_by_ses = visit*ses)
pmap(df, expected, cf) %>%
unlist() %>%
cbind(df, expected_haz = .) %>%
mutate(gender = if_else(gender == 0, "Female", "Male"),
ses = if_else(ses == 0, "Low", "High")) %>%
kableExtra::kable() %>%
kableExtra::kable_styling()
expected <- function(visit, ses, gender, visit2, visit_by_ses, coefficients)
exp <- coefficients[1] + coefficients[2]*visit + coefficients[3]*ses +
coefficients[4]*gender + coefficients[5]*visit2 + coefficients[6]*visit_by_ses
visit <- c(0, 4, 8, 12, 16, 20, 24)
ses <- c(0, 1)
gender <- c(0,1)
cf <- fit_gee_ar1$coefficients %>% as.vector()
df <- expand.grid(visit = visit, ses = ses, gender = gender) %>%
mutate(visit2 = visit^2,
visit_by_ses = visit*ses)
pmap(df, expected, cf) %>%
unlist() %>%
cbind(df, expected_haz = .) %>%
mutate(gender = if_else(gender == 0, "Female", "Male"),
ses = if_else(ses == 0, "Low", "High")) %>%
kableExtra::kable() %>%
kableExtra::kable_styling()
expected <- function(visit, ses, gender, visit2, visit_by_ses, coefficients)
exp <- coefficients[1] + coefficients[2]*visit + coefficients[3]*ses +
coefficients[4]*gender + coefficients[5]*visit2 + coefficients[6]*visit_by_ses
visit <- seq(0, 24, by=2)
ses <- c(0, 1)
gender <- c(0,1)
cf <- fit_gee_ar1$coefficients %>% as.vector()
df <- expand.grid(visit = visit, ses = ses, gender = gender) %>%
mutate(visit2 = visit^2,
visit_by_ses = visit*ses)
pmap(df, expected, cf) %>%
unlist() %>%
cbind(df, expected_haz = .) %>%
mutate(gender = if_else(gender == 0, "Female", "Male"),
ses = if_else(ses == 0, "Low", "High")) %>%
kableExtra::kable() %>%
kableExtra::kable_styling()
(expected_df <- pmap(df, expected, cf) %>%
unlist() %>%
cbind(df, expected_haz = .) %>%
mutate(gender = if_else(gender == 0, "Female", "Male"),
ses = if_else(ses == 0, "Low", "High"))) %>%
kableExtra::kable() %>%
kableExtra::kable_styling()
expected_df %>%
filter(gender == "Female", visit %in% c(0,12))
library(kableExtra)
expected_df %>%
filter(gender == "Female", visit %in% c(0,12)) %>%
kable() %>% kable_styling()
expected_df %>%
filter(visit %in% c(0,12)) %>%
kable() %>% kable_styling()
fish_encounters
# ar1
fit_gls_ar1 <- gls(haz ~ visit*ses + gender + I(visit^2), correlation = corAR1(form = ~ 1 | id),
data = haz, method = "REML", na.action = na.omit)
library(lme4)
# ar1
fit_gls_ar1 <- gls(haz ~ visit*ses + gender + I(visit^2), correlation = corAR1(form = ~ 1 | id),
data = haz, method = "REML", na.action = na.omit)
library(nlme)
# ar1
fit_gls_ar1 <- gls(haz ~ visit*ses + gender + I(visit^2), correlation = corAR1(form = ~ 1 | id),
data = haz, method = "REML", na.action = na.omit)
summary(fit_gls_ar1)
summary(fit_gls_ar1)
library(nlme)
# ar1
fit_gls_ar1 <- gls(haz ~ visit*ses + gender + I(visit^2), correlation = corAR1(form = ~ 1 | id),
data = haz, method = "REML", na.action = na.omit)
summary(fit_gls_ar1)
?corAR1
?gls
library(nlme)
# ar1
fit_gls_ar1 <- gls(haz ~ visit*ses + gender + I(visit^2), correlation = corAR1(form = ~ 1 | id),
data = haz, method = "REML", na.action = na.omit)
summary(fit_gls_ar1)
summary(fit_gls_ar1)
summary(fit_gls_ar1)
coef(fit_gee_ar1);coef(fit_gls_ar1)
cbind(coef(fit_gee_ar1),coef(fit_gls_ar1))
cbind(coef(fit_gee_ar1),coef(fit_gls_ar1)) %>% kable()
cbind(coef(fit_gee_ar1),coef(fit_gls_ar1))
colnames(cbind(coef(fit_gee_ar1),coef(fit_gls_ar1))) <- c("gee", "cov_pattern")
cbind(coef(fit_gee_ar1),coef(fit_gls_ar1)) %>% colnames <- c("gee", "cov_pattern")
cbind(coef(fit_gee_ar1),coef(fit_gls_ar1)) %>% colnames
cbind(coef(fit_gee_ar1),coef(fit_gls_ar1))
cbind(coef(fit_gee_ar1),coef(fit_gls_ar1)) %>% rownames()
cbind(coef(fit_gee_ar1),coef(fit_gls_ar1)) %>% rownames()
cbind(coef(fit_gee_ar1),coef(fit_gls_ar1))
comparison <- cbind(coef(fit_gee_ar1),coef(fit_gls_ar1))
colnames(comparison) <- c("GEE", "Covariance Pattern")
comparison
comparison <- cbind(coef(fit_gee_ar1),coef(fit_gls_ar1))
colnames(comparison) <- c("GEE", "Covariance Pattern")
comparison %>% kable() %>% kable_styling
?fig.width
