update
nrow(data)
loss <- function(data, lr){
weight_cols <- data %>%
select(contains('w')) %>%
colnames()
feature_cols <- data %>%
select(contains('x')) %>%
colnames()
for (i in 1:nrow(data)){
weights <- data[,weight_cols]
x <- data[,feature_cols]
y <- data[i,'y'] %>% pull(y)
j <- 1
b <- data[i,'b'] %>% pull(b)
for (weight_col in weight_cols){
covariate <- x[i,j] %>% pull()
weight <- data[i, weight_col] %>% pull()
data[i+1, weight_col] <- weight - lr*((sigmoid(sum(weights[i,] * x[i,]) + b) - y)*covariate)
j <- j + 1
}
data[i+1, 'b'] <- b - lr*(sigmoid(sum(weights[i,] * x[i,]) + b) - y)
}
return(data)
}
update <- loss(data, lr = 0.2)
udpate
update
update_lr_weights <- function(data, lr){
weight_cols <- data %>%
select(contains('w')) %>%
colnames()
feature_cols <- data %>%
select(contains('x')) %>%
colnames()
for (i in 1:nrow(data)){
weights <- data[,weight_cols]
x <- data[,feature_cols]
y <- data[i,'y'] %>% pull(y)
j <- 1
b <- data[i,'b'] %>% pull(b)
for (weight_col in weight_cols){
covariate <- x[i,j] %>% pull()
weight <- data[i, weight_col] %>% pull()
data[i+1, weight_col] <- weight - lr*((sigmoid(sum(weights[i,] * x[i,]) + b) - y)*covariate)
data[i, paste0('eta_dl.d', weight_col)] <- lr*((sigmoid(sum(weights[i,] * x[i,]) + b) - y)*covariate)
j <- j + 1
}
data[i+1, 'b'] <- b - lr*(sigmoid(sum(weights[i,] * x[i,]) + b) - y)
data[i+1, 'eta_dl.db'] <- lr*(sigmoid(sum(weights[i,] * x[i,]) + b) - y)
data[i, 'error'] <- -(y*log(sigmoid(sum(weights[i,] * x[i,]) + b)) + (1-y) * log(1 - sigmoid(sum(weights[i,] * x[i,]) + b)))
}
return(data)
}
data <- tibble(x1 = c(2,1,0), x2 = c(1,3,4), y = c(1,0,0),
w1 = 0, w2 = 0, b = 0, error = 0, eta_dl.dw1 = 0, eta_dl.dw2 = 0, eta_dl.db = 0)
update <- loss(data, lr = 0.2)
update_lr_weights <- function(data, lr){
weight_cols <- data %>%
select(contains('w')) %>%
colnames()
feature_cols <- data %>%
select(contains('x')) %>%
colnames()
for (i in 1:nrow(data)){
weights <- data[,weight_cols]
x <- data[,feature_cols]
y <- data[i,'y'] %>% pull(y)
j <- 1
b <- data[i,'b'] %>% pull(b)
for (weight_col in weight_cols){
covariate <- x[i,j] %>% pull()
weight <- data[i, weight_col] %>% pull()
data[i+1, weight_col] <- weight - lr*((sigmoid(sum(weights[i,] * x[i,]) + b) - y)*covariate)
data[i, paste0('eta_dl.d', weight_col)] <- lr*((sigmoid(sum(weights[i,] * x[i,]) + b) - y)*covariate)
j <- j + 1
}
data[i+1, 'b'] <- b - lr*(sigmoid(sum(weights[i,] * x[i,]) + b) - y)
# data[i+1, 'eta_dl.db'] <- lr*(sigmoid(sum(weights[i,] * x[i,]) + b) - y)
data[i, 'error'] <- -(y*log(sigmoid(sum(weights[i,] * x[i,]) + b)) + (1-y) * log(1 - sigmoid(sum(weights[i,] * x[i,]) + b)))
}
return(data)
}
data <- tibble(x1 = c(2,1,0), x2 = c(1,3,4), y = c(1,0,0),
w1 = 0, w2 = 0, b = 0, error = 0, eta_dl.dw1 = 0, eta_dl.dw2 = 0, eta_dl.db = 0)
update <- loss(data, lr = 0.2)
update_lr_weights <- function(data, lr){
weight_cols <- data %>%
select(contains('w')) %>%
colnames()
feature_cols <- data %>%
select(contains('x')) %>%
colnames()
for (i in 1:nrow(data)){
weights <- data[,weight_cols]
x <- data[,feature_cols]
y <- data[i,'y'] %>% pull(y)
j <- 1
b <- data[i,'b'] %>% pull(b)
for (weight_col in weight_cols){
covariate <- x[i,j] %>% pull()
weight <- data[i, weight_col] %>% pull()
data[i+1, weight_col] <- weight - lr*((sigmoid(sum(weights[i,] * x[i,]) + b) - y)*covariate)
data[i, paste0('eta_dl.d', weight_col)] <- lr*((sigmoid(sum(weights[i,] * x[i,]) + b) - y)*covariate)
j <- j + 1
}
data[i+1, 'b'] <- b - lr*(sigmoid(sum(weights[i,] * x[i,]) + b) - y)
# data[i+1, 'eta_dl.db'] <- lr*(sigmoid(sum(weights[i,] * x[i,]) + b) - y)
# data[i, 'error'] <- -(y*log(sigmoid(sum(weights[i,] * x[i,]) + b)) + (1-y) * log(1 - sigmoid(sum(weights[i,] * x[i,]) + b)))
}
return(data)
}
data <- tibble(x1 = c(2,1,0), x2 = c(1,3,4), y = c(1,0,0),
w1 = 0, w2 = 0, b = 0, error = 0, eta_dl.dw1 = 0, eta_dl.dw2 = 0, eta_dl.db = 0)
update <- loss(data, lr = 0.2)
data[i, paste0('eta_dl.d', weight_col)] <- lr*((sigmoid(sum(weights[i,] * x[i,]) + b) - y)*covariate)
update_lr_weights <- function(data, lr){
weight_cols <- data %>%
select(contains('w')) %>%
colnames()
feature_cols <- data %>%
select(contains('x')) %>%
colnames()
for (i in 1:nrow(data)){
weights <- data[,weight_cols]
x <- data[,feature_cols]
y <- data[i,'y'] %>% pull(y)
j <- 1
b <- data[i,'b'] %>% pull(b)
for (weight_col in weight_cols){
covariate <- x[i,j] %>% pull()
weight <- data[i, weight_col] %>% pull()
data[i+1, weight_col] <- weight - lr*((sigmoid(sum(weights[i,] * x[i,]) + b) - y)*covariate)
# data[i, paste0('eta_dl.d', weight_col)] <- lr*((sigmoid(sum(weights[i,] * x[i,]) + b) - y)*covariate)
j <- j + 1
}
data[i+1, 'b'] <- b - lr*(sigmoid(sum(weights[i,] * x[i,]) + b) - y)
# data[i+1, 'eta_dl.db'] <- lr*(sigmoid(sum(weights[i,] * x[i,]) + b) - y)
# data[i, 'error'] <- -(y*log(sigmoid(sum(weights[i,] * x[i,]) + b)) + (1-y) * log(1 - sigmoid(sum(weights[i,] * x[i,]) + b)))
}
return(data)
}
data <- tibble(x1 = c(2,1,0), x2 = c(1,3,4), y = c(1,0,0),
w1 = 0, w2 = 0, b = 0, error = 0, eta_dl.dw1 = 0, eta_dl.dw2 = 0, eta_dl.db = 0)
update <- loss(data, lr = 0.2)
update_lr_weights <- function(data, lr){
weight_cols <- data %>%
select(contains('w'), !contains('dl.')) %>%
colnames()
feature_cols <- data %>%
select(contains('x')) %>%
colnames()
for (i in 1:nrow(data)){
weights <- data[,weight_cols]
x <- data[,feature_cols]
y <- data[i,'y'] %>% pull(y)
j <- 1
b <- data[i,'b'] %>% pull(b)
for (weight_col in weight_cols){
covariate <- x[i,j] %>% pull()
weight <- data[i, weight_col] %>% pull()
data[i+1, weight_col] <- weight - lr*((sigmoid(sum(weights[i,] * x[i,]) + b) - y)*covariate)
data[i, paste0('eta_dl.d', weight_col)] <- lr*((sigmoid(sum(weights[i,] * x[i,]) + b) - y)*covariate)
j <- j + 1
}
data[i+1, 'b'] <- b - lr*(sigmoid(sum(weights[i,] * x[i,]) + b) - y)
data[i+1, 'eta_dl.db'] <- lr*(sigmoid(sum(weights[i,] * x[i,]) + b) - y)
data[i, 'error'] <- -(y*log(sigmoid(sum(weights[i,] * x[i,]) + b)) + (1-y) * log(1 - sigmoid(sum(weights[i,] * x[i,]) + b)))
}
return(data)
}
data <- tibble(x1 = c(2,1,0), x2 = c(1,3,4), y = c(1,0,0),
w1 = 0, w2 = 0, b = 0, error = 0, eta_dl.dw1 = 0, eta_dl.dw2 = 0, eta_dl.db = 0)
update <- loss(data, lr = 0.2)
weights
weight_col
weight_cols
feature_cols
data
weight_cols <- data %>%
select(contains('w'), !contains('dl.')) %>%
colnames()
feature_cols <- data %>%
select(contains('x')) %>%
colnames()
weight_cols
update_lr_weights <- function(data, lr){
weight_cols <- data %>%
select(starts_with('w')) %>%
colnames()
feature_cols <- data %>%
select(contains('x')) %>%
colnames()
for (i in 1:nrow(data)){
weights <- data[,weight_cols]
x <- data[,feature_cols]
y <- data[i,'y'] %>% pull(y)
j <- 1
b <- data[i,'b'] %>% pull(b)
for (weight_col in weight_cols){
covariate <- x[i,j] %>% pull()
weight <- data[i, weight_col] %>% pull()
data[i+1, weight_col] <- weight - lr*((sigmoid(sum(weights[i,] * x[i,]) + b) - y)*covariate)
data[i, paste0('eta_dl.d', weight_col)] <- lr*((sigmoid(sum(weights[i,] * x[i,]) + b) - y)*covariate)
j <- j + 1
}
data[i+1, 'b'] <- b - lr*(sigmoid(sum(weights[i,] * x[i,]) + b) - y)
data[i+1, 'eta_dl.db'] <- lr*(sigmoid(sum(weights[i,] * x[i,]) + b) - y)
data[i, 'error'] <- -(y*log(sigmoid(sum(weights[i,] * x[i,]) + b)) + (1-y) * log(1 - sigmoid(sum(weights[i,] * x[i,]) + b)))
}
return(data)
}
data <- tibble(x1 = c(2,1,0), x2 = c(1,3,4), y = c(1,0,0),
w1 = 0, w2 = 0, b = 0, error = 0, eta_dl.dw1 = 0, eta_dl.dw2 = 0, eta_dl.db = 0)
update <- loss(data, lr = 0.2)
weight_cols <- data %>%
select(starts_with('w')) %>%
colnames()
feature_cols <- data %>%
select(contains('x')) %>%
colnames()
feature_cols
weight_cols
weight_col <- weight_cols[1]
i <- 1
weight_cols <- data %>%
select(starts_with('w')) %>%
colnames()
feature_cols <- data %>%
select(contains('x')) %>%
colnames()
for (i in 1:nrow(data)){
weights <- data[,weight_cols]
x <- data[,feature_cols]
y <- data[i,'y'] %>% pull(y)
j <- 1
b <- data[i,'b'] %>% pull(b)
for (weight_col in weight_cols){
covariate <- x[i,j] %>% pull()
weight <- data[i, weight_col] %>% pull()
data[i+1, weight_col] <- weight - lr*((sigmoid(sum(weights[i,] * x[i,]) + b) - y)*covariate)
data[i, paste0('eta_dl.d', weight_col)] <- lr*((sigmoid(sum(weights[i,] * x[i,]) + b) - y)*covariate)
j <- j + 1
}
data[i+1, 'b'] <- b - lr*(sigmoid(sum(weights[i,] * x[i,]) + b) - y)
data[i+1, 'eta_dl.db'] <- lr*(sigmoid(sum(weights[i,] * x[i,]) + b) - y)
data[i, 'error'] <- -(y*log(sigmoid(sum(weights[i,] * x[i,]) + b)) + (1-y) * log(1 - sigmoid(sum(weights[i,] * x[i,]) + b)))
}
lr <- .2
weight_cols <- data %>%
select(starts_with('w')) %>%
colnames()
feature_cols <- data %>%
select(contains('x')) %>%
colnames()
for (i in 1:nrow(data)){
weights <- data[,weight_cols]
x <- data[,feature_cols]
y <- data[i,'y'] %>% pull(y)
j <- 1
b <- data[i,'b'] %>% pull(b)
for (weight_col in weight_cols){
covariate <- x[i,j] %>% pull()
weight <- data[i, weight_col] %>% pull()
data[i+1, weight_col] <- weight - lr*((sigmoid(sum(weights[i,] * x[i,]) + b) - y)*covariate)
data[i, paste0('eta_dl.d', weight_col)] <- lr*((sigmoid(sum(weights[i,] * x[i,]) + b) - y)*covariate)
j <- j + 1
}
data[i+1, 'b'] <- b - lr*(sigmoid(sum(weights[i,] * x[i,]) + b) - y)
data[i+1, 'eta_dl.db'] <- lr*(sigmoid(sum(weights[i,] * x[i,]) + b) - y)
data[i, 'error'] <- -(y*log(sigmoid(sum(weights[i,] * x[i,]) + b)) + (1-y) * log(1 - sigmoid(sum(weights[i,] * x[i,]) + b)))
}
data
data %>% glimpse
data <- tibble(x1 = c(2,1,0), x2 = c(1,3,4), y = c(1,0,0),
w1 = 0, w2 = 0, b = 0, error = 0, eta_dl.dw1 = 0, eta_dl.dw2 = 0, eta_dl.db = 0)
weight_cols <- data %>%
select(starts_with('w')) %>%
colnames()
feature_cols <- data %>%
select(contains('x')) %>%
colnames()
for (i in 1:nrow(data)){
weights <- data[,weight_cols]
x <- data[,feature_cols]
y <- data[i,'y'] %>% pull(y)
j <- 1
b <- data[i,'b'] %>% pull(b)
for (weight_col in weight_cols){
covariate <- x[i,j] %>% pull()
weight <- data[i, weight_col] %>% pull()
data[i+1, weight_col] <- weight - lr*((sigmoid(sum(weights[i,] * x[i,]) + b) - y)*covariate)
data[i, paste0('eta_dl.d', weight_col)] <- lr*((sigmoid(sum(weights[i,] * x[i,]) + b) - y)*covariate)
j <- j + 1
}
data[i+1, 'b'] <- b - lr*(sigmoid(sum(weights[i,] * x[i,]) + b) - y)
data[i+1, 'eta_dl.db'] <- lr*(sigmoid(sum(weights[i,] * x[i,]) + b) - y)
data[i, 'error'] <- -(y*log(sigmoid(sum(weights[i,] * x[i,]) + b)) + (1-y) * log(1 - sigmoid(sum(weights[i,] * x[i,]) + b)))
}
data
update_lr_weights <- function(data, lr){
weight_cols <- data %>%
select(starts_with('w')) %>%
colnames()
feature_cols <- data %>%
select(contains('x')) %>%
colnames()
for (i in 1:nrow(data)){
weights <- data[,weight_cols]
x <- data[,feature_cols]
y <- data[i,'y'] %>% pull(y)
j <- 1
b <- data[i,'b'] %>% pull(b)
for (weight_col in weight_cols){
covariate <- x[i,j] %>% pull()
weight <- data[i, weight_col] %>% pull()
data[i+1, weight_col] <- weight - lr*((sigmoid(sum(weights[i,] * x[i,]) + b) - y)*covariate)
data[i, paste0('eta_dl.d', weight_col)] <- lr*((sigmoid(sum(weights[i,] * x[i,]) + b) - y)*covariate)
j <- j + 1
}
data[i+1, 'b'] <- b - lr*(sigmoid(sum(weights[i,] * x[i,]) + b) - y)
data[i+1, 'eta_dl.db'] <- lr*(sigmoid(sum(weights[i,] * x[i,]) + b) - y)
data[i, 'error'] <- -(y*log(sigmoid(sum(weights[i,] * x[i,]) + b)) + (1-y) * log(1 - sigmoid(sum(weights[i,] * x[i,]) + b)))
}
return(data)
}
data <- tibble(x1 = c(2,1,0), x2 = c(1,3,4), y = c(1,0,0),
w1 = 0, w2 = 0, b = 0, error = 0, eta_dl.dw1 = 0, eta_dl.dw2 = 0, eta_dl.db = 0)
update <- loss(data, lr = 0.2)
data <- tibble(x1 = c(2,1,0), x2 = c(1,3,4), y = c(1,0,0),
w1 = 0, w2 = 0, b = 0, error = 0, eta_dl.dw1 = 0, eta_dl.dw2 = 0, eta_dl.db = 0)
data
data %>% glimpse
weights
x
sum(weights[1,]*x[1,])
sum(weights[2,]*x[2,])
sum(weights[2,]*x[2,])+b
b
sigmoid(sum(weights[2,]*x[2,])+b)
lr*(sigmoid(sum(weights[2,]*x[2,])+b))
rm(list=ls())
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
sigmoid <- function(x) {
1 / (1 + exp(-x))
}
sigmoid(0)
-log(sigmoid(0))
(sigmoid(0) - 1)*2
(sigmoid(0) - 1)*1
update_lr_weights <- function(data, lr){
weight_cols <- data %>%
select(starts_with('w')) %>%
colnames()
feature_cols <- data %>%
select(contains('x')) %>%
colnames()
for (i in 1:nrow(data)){
weights <- data[,weight_cols]
x <- data[,feature_cols]
y <- data[i,'y'] %>% pull(y)
j <- 1
b <- data[i,'b'] %>% pull(b)
for (weight_col in weight_cols){
covariate <- x[i,j] %>% pull()
weight <- data[i, weight_col] %>% pull()
data[i+1, weight_col] <- weight - lr*((sigmoid(sum(weights[i,] * x[i,]) + b) - y)*covariate)
data[i, paste0('eta_dl.d', weight_col)] <- lr*((sigmoid(sum(weights[i,] * x[i,]) + b) - y)*covariate)
j <- j + 1
}
data[i+1, 'b'] <- b - lr*(sigmoid(sum(weights[i,] * x[i,]) + b) - y)
data[i+1, 'eta_dl.db'] <- lr*(sigmoid(sum(weights[i,] * x[i,]) + b) - y)
data[i, 'error'] <- -(y*log(sigmoid(sum(weights[i,] * x[i,]) + b)) + (1-y) * log(1 - sigmoid(sum(weights[i,] * x[i,]) + b)))
}
return(data)
}
data <- tibble(x1 = c(2,1,0), x2 = c(1,3,4), y = c(1,0,0),
w1 = 0, w2 = 0, b = 0, error = 0, eta_dl.dw1 = 0, eta_dl.dw2 = 0, eta_dl.db = 0)
update <- loss(data, lr = 0.2)
update_lr_weights <- function(data, lr){
weight_cols <- data %>%
select(starts_with('w')) %>%
colnames()
feature_cols <- data %>%
select(contains('x')) %>%
colnames()
for (i in 1:nrow(data)){
weights <- data[,weight_cols]
x <- data[,feature_cols]
y <- data[i,'y'] %>% pull(y)
j <- 1
b <- data[i,'b'] %>% pull(b)
for (weight_col in weight_cols){
covariate <- x[i,j] %>% pull()
weight <- data[i, weight_col] %>% pull()
data[i+1, weight_col] <- weight - lr*((sigmoid(sum(weights[i,] * x[i,]) + b) - y)*covariate)
data[i, paste0('eta_dl.d', weight_col)] <- lr*((sigmoid(sum(weights[i,] * x[i,]) + b) - y)*covariate)
j <- j + 1
}
data[i+1, 'b'] <- b - lr*(sigmoid(sum(weights[i,] * x[i,]) + b) - y)
data[i+1, 'eta_dl.db'] <- lr*(sigmoid(sum(weights[i,] * x[i,]) + b) - y)
data[i, 'error'] <- -(y*log(sigmoid(sum(weights[i,] * x[i,]) + b)) + (1-y) * log(1 - sigmoid(sum(weights[i,] * x[i,]) + b)))
}
return(data)
}
data <- tibble(x1 = c(2,1,0), x2 = c(1,3,4), y = c(1,0,0),
w1 = 0, w2 = 0, b = 0, error = 0, eta_dl.dw1 = 0, eta_dl.dw2 = 0, eta_dl.db = 0)
update <- update_lr_weights(data, lr = 0.2)
sigmoid(0)
update
update %>% glimpse
update
update %>% kableExtra::kable() %>% kable_styling()
update %>% kableExtra::kable() %>% kableExtra:;able_styling()
update %>% kableExtra::kable() %>% kableExtra::kable_styling()
update %>% glimpse
update
update_lr_weights <- function(data, lr){
weight_cols <- data %>%
select(starts_with('w')) %>%
colnames()
feature_cols <- data %>%
select(contains('x')) %>%
colnames()
for (i in 1:nrow(data)){
weights <- data[,weight_cols]
x <- data[,feature_cols]
y <- data[i,'y'] %>% pull(y)
j <- 1
b <- data[i,'b'] %>% pull(b)
for (weight_col in weight_cols){
covariate <- x[i,j] %>% pull()
weight <- data[i, weight_col] %>% pull()
data[i+1, weight_col] <- weight - lr*((sigmoid(sum(weights[i,] * x[i,]) + b) - y)*covariate)
data[i, paste0('eta_dl.d', weight_col)] <- lr*((sigmoid(sum(weights[i,] * x[i,]) + b) - y)*covariate)
j <- j + 1
}
data[i+1, 'b'] <- b - lr*(sigmoid(sum(weights[i,] * x[i,]) + b) - y)
data[i, 'eta_dl.db'] <- lr*(sigmoid(sum(weights[i,] * x[i,]) + b) - y)
data[i, 'error'] <- -(y*log(sigmoid(sum(weights[i,] * x[i,]) + b)) + (1-y) * log(1 - sigmoid(sum(weights[i,] * x[i,]) + b)))
}
return(data)
}
data <- tibble(x1 = c(2,1,0), x2 = c(1,3,4), y = c(1,0,0),
w1 = 0, w2 = 0, b = 0, error = 0, eta_dl.dw1 = 0, eta_dl.dw2 = 0, eta_dl.db = 0)
update <- update_lr_weights(data, lr = 0.2)
udpate
update
update %>% kableExtra::kable() %>% kableExtra::kable_styling()
update %>% mutate(t = seq(0,3,1)) %>% kableExtra::kable() %>% kableExtra::kable_styling()
update %>%
mutate(t = seq(0,3,1)) %>%
relocate(t) %>%
kableExtra::kable() %>% kableExtra::kable_styling()
update %>%
mutate(t = seq(0,nrow(update),1)) %>%
relocate(t) %>%
kableExtra::kable() %>%
kableExtra::kable_styling()
update %>%
mutate(t = seq(0,nrow(update)-1,1)) %>%
relocate(t) %>%
kableExtra::kable() %>%
kableExtra::kable_styling()
polite <- read_csv('politeness_data.csv')
polite
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
sigmoid <- function(x) {
1 / (1 + exp(-x))
}
update_lr_weights <- function(data, lr){
# assumes weights start with w
weight_cols <- data %>%
select(starts_with('w')) %>%
colnames()
# assumes features start with x
feature_cols <- data %>%
select(starts_with('x')) %>%
colnames()
# look at each x1, x2, y tuple
for (i in 1:nrow(data)){
weights <- data[,weight_cols]
x <- data[,feature_cols]
y <- data[i,'y'] %>% pull(y)
j <- 1
b <- data[i,'b'] %>% pull(b)
# update weights and gradients for each tuple, for each weight
for (weight_col in weight_cols){
covariate <- x[i,j] %>% pull()
weight <- data[i, weight_col] %>% pull()
data[i+1, weight_col] <- weight - lr*((sigmoid(sum(weights[i,] * x[i,]) + b) - y)*covariate)
data[i, paste0('eta_dl.d', weight_col)] <- lr*((sigmoid(sum(weights[i,] * x[i,]) + b) - y)*covariate)
j <- j + 1
}
# update bias, gradient for each tuple
data[i+1, 'b'] <- b - lr*(sigmoid(sum(weights[i,] * x[i,]) + b) - y)
data[i, 'eta_dl.db'] <- lr*(sigmoid(sum(weights[i,] * x[i,]) + b) - y)
# get error for each tuple
data[i, 'error'] <- -(y*log(sigmoid(sum(weights[i,] * x[i,]) + b)) + (1-y) * log(1 - sigmoid(sum(weights[i,] * x[i,]) + b)))
}
return(data)
}
data <- tibble(x1 = c(2,1,0), x2 = c(1,3,4), y = c(1,0,0),
w1 = 0, w2 = 0, b = 0, error = 0, eta_dl.dw1 = 0, eta_dl.dw2 = 0, eta_dl.db = 0)
update <- update_lr_weights(data, lr = 0.2)
update %>%
mutate(t = seq(0,nrow(update)-1,1)) %>%
relocate(t) %>%
kableExtra::kable() %>%
kableExtra::kable_styling()
