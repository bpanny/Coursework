geom_density(alpha = .4)
weekly %>%
ggplot(aes(x = Today, fill = Direction)) +
geom_density()
weekly %>%
ggplot(aes(x = Volume, y = Today)) +
geom_point()
weekly %>%
ggplot(aes(x = Volume, fill = Direction)) +
geom_density(alpha = .4)
weekly %>%
ggplot(aes(x = Today, fill = Direction)) +
geom_density(alpha=.4)
weekly %>%
ggplot(aes(x = Volume, y = Today)) +
geom_point()
weekly %>%
ggplot(aes(x = Volume, fill = Direction)) +
geom_density(alpha = .4)
weekly %>%
ggplot(aes(x = abs(Today), fill = Direction)) +
geom_density(alpha=.4)
weekly %>%
ggplot(aes(x = Volume, y = Today)) +
geom_point()
library(ISLR)
weekly <- Weekly
weekly %>% summary()
weekly %>% count(Year)
weekly %>% GGally::ggpairs(columns = 2:6)
weekly
weekly %>% names
modb <- weekly %>% glm(Direction ~ Lag1 + Lag2 + Lag3 + Lag4 + Lag5 + Volume,
data = .,
family = 'binomial')
summary(modb)
exp(0.05)
weekly
weekly %>% head
weekly %>% as_tibble
weekly$Direction %>% level
weekly$Direction %>% levels
modb <- weekly %>%
mutate(num_dir = if_else(Direction == "Up", 1, 0)) %>%
glm(num_dir ~ Lag1 + Lag2 + Lag3 + Lag4 + Lag5 + Volume,
data = .,
family = 'binomial')
summary(modb)
pred_dir <- predict(modb)
pred_dir <- predict(modb)
table(pred_dir, modb$y)
pred_dir <- predict(modb, type = 'response')
pred_dir <- predict(modb, type = 'response')
table(pred_dir, modb$y)
?predict
pred_dir <- predict(modb)
pred_dir
pred_dir %>% head
pred_dir <- predict(modb, type = c('link','response','terms')); pred_dir %>% head
pred_dir <- predict(modb, type = c('link')); pred_dir %>% head
pred_dir <- predict(modb, type = 'link'); pred_dir %>% head
pred_dir <- predict(modb, type = 'response'); pred_dir %>% head
pred_dir <- predict(modb, type = 'terms'); pred_dir %>% head
cutoff <- .5
pred_dir <- ifelse(predict(modb, type = 'response') > .5, 1, 0)
table(pred_dir, modb$y)
pred_dir
sum(pred_dir == 0)
sum(pred_dir == 0 & modb$y = 0)
sum(pred_dir == 0 & modb$y == 0)
sum(pred_dir == 0 & modb$y == 1)
pred_dir
predict(modb, type='response') %>% head
predict(modb, type='response') %>% log(./(1-.))
predict(modb, type='response') %>% log(./(1-.)) %>% head
log(.5/5)
log(.5/.55)
log(.5/.5)
log(.7/.3)
log(.99/.01)
1/(1+exp(-0))
modb <- weekly %>%
glm(Direction ~ Lag1 + Lag2 + Lag3 + Lag4 + Lag5 + Volume,
data = .,
family = 'binomial')
summary(modb)
cutoff <- .5
pred_dir <- ifelse(predict(modb, type = 'response') > .5, 'Up', 'Down')
table(pred_dir, modb$y)
cutoff <- .5
pred_dir <- ifelse(predict(modb, type = 'response') > .5, 'Up', 'Down')
table(pred_dir, ifelse(modb$y == 1, 'Up', 'Down')
cutoff <- .5
pred_dir <- ifelse(predict(modb, type = 'response') > .5, 'Up', 'Down')
table(pred_dir, ifelse(modb$y == 1, 'Up', 'Down')()
cutoff <- .5
pred_dir <- ifelse(predict(modb, type = 'response') > .5, 'Up', 'Down')
table(pred_dir, ifelse(modb$y == 1, 'Up', 'Down'))
modb$y
?split
split(weekly, weekly$Year %in% c(2009, 2010))
split(weekly, weekly$Year %in% c(2009, 2010)) %>% head
split(weekly, weekly$Year %in% c(2009, 2010)) %>% length
split(weekly, weekly$Year %in% c(2009, 2010)) %>% class
weekly_split <- split(weekly, weekly$Year %in% c(2009, 2010))
weekly_split %>% glimpse
weekly_split <- split(weekly, weekly$Year %in% c(2009, 2010))
weekly_train <- weekly[[FALSE]]
weekly_split <- split(weekly, weekly$Year %in% c(2009, 2010))
weekly_train <- weekly[[1]]
weekly_split <- split(weekly, weekly$Year %in% c(2009, 2010))
weekly_train <- weekly[[1]]
weekly_test <- weekly[[2]]
weekly_test
weekly_test %>% head
weekly_test %>% length
weekly_test %>% dim
weekly_split %>% glimpse
weekly_split$`TRUE`
weekly_split$`TRUE` %>% HEAD
weekly_split$`TRUE` %>% head
weekly_split <- split(weekly, weekly$Year %in% c(2009, 2010))
weekly_train <- weekly_split$`FALSE`
weekly_test <- weekly_split$`TRUE`
mod_glm <- glm(Direction ~ Lag2, family = 'binomial', data = weekly_train)
cutoff <- .5
pred_test_glm <- ifelse(predict(mod_glm, newdata = weekly_test, type = 'response') > .5, 'Up', 'Down')
table(pred_test_glm, ifelse(mod_glm$y == 1, 'Up', 'Down'))
weekly_split <- split(weekly, weekly$Year %in% c(2009, 2010))
weekly_train <- weekly_split$`FALSE`
weekly_test <- weekly_split$`TRUE`
mod_glm <- glm(Direction ~ Lag2, family = 'binomial', data = weekly_train)
cutoff <- .5
pred_test_glm <- ifelse(predict(mod_glm, newdata = weekly_test, type = 'response') > .5, 'Up', 'Down')
table(pred_test_glm, weekly_test$Direction)
library(MASS)
mod_lda <- lda(Direction ~ Lag2, data = weekly_train)
cutoff <- .5
pred_test_lda <- ifelse(predict(mod_lda, newdata = weekly_test, type = 'response') > cutoff, 'Up', 'Down')
plot(mod_lda)
library(MASS)
mod_lda <- lda(Direction ~ Lag2, data = weekly_train)
cutoff <- .5
plot(mod_lda)
# predict the probability
pred_test_lda <- predict(mod_lda, newdata = weekly_test)
head(pred_test_lda$x) #linear discriminants of each observation
head(pred_test_lda$posterior) # matrix whose kth column contains the posterior probability that the corresponding observation belongs to the kth class
head(pred_test_lda$class) #classified using a 50% posterior probability cutoff
table(pred_test_lda$class) #predicted outcome
table(pred_test_lda$class, weekly_test$Direction) #contingency table of predicted (row) and true (column) outcome
library(MASS)
mod_lda <- lda(Direction ~ Lag2, data = weekly_train)
cutoff <- .5
plot(mod_lda)
# predict the probability
pred_test_lda <- predict(mod_lda, newdata = weekly_test)
head(pred_test_lda$x) #linear discriminants of each observation
head(pred_test_lda$posterior) # matrix whose kth column contains the posterior probability that the corresponding observation belongs to the kth class
# head(pred_test_lda$class) #classified using a 50% posterior probability cutoff
table(pred_test_lda$class) #predicted outcome
table(pred_test_lda$class, weekly_test$Direction) #contingency table of predicted (row) and true (column) outcome
library(MASS)
mod_lda <- lda(Direction ~ Lag2, data = weekly_train)
cutoff <- .5
# plot(mod_lda)
# predict the probability
pred_test_lda <- predict(mod_lda, newdata = weekly_test)
head(pred_test_lda$x) #linear discriminants of each observation
head(pred_test_lda$posterior) # matrix whose kth column contains the posterior probability that the corresponding observation belongs to the kth class
# head(pred_test_lda$class) #classified using a 50% posterior probability cutoff
table(pred_test_lda$class) #predicted outcome
table(pred_test_lda$class, weekly_test$Direction) #contingency table of predicted (row) and true (column) outcome
library(MASS)
mod_lda <- lda(Direction ~ Lag2, data = weekly_train)
cutoff <- .5
# plot(mod_lda)
# predict the probability
pred_test_lda <- predict(mod_lda, newdata = weekly_test)
head(pred_test_lda$x) #linear discriminants of each observation
head(pred_test_lda$posterior) # matrix whose kth column contains the posterior probability that the corresponding observation belongs to the kth class
# head(pred_test_lda$class) #classified using a 50% posterior probability cutoff
# table(pred_test_lda$class) #predicted outcome
table(pred_test_lda$class, weekly_test$Direction) #contingency table of predicted (row) and true (column) outcome
qda.fit <- qda(Direction ~ Lag2, data = weekly_train)
qda.fit
# predict the probability
pred_test_qda <- predict(qda.fit, newdata = weekly_test)
head(pred_test_qda$posterior)
head(pred_test_qda$class)
table(pred_test_qda$class, weekly_test$Direction)
mod_lda_all <- lda(Direction ~ . + I(factor(year)), data = weekly_train)
mod_lda_all <- lda(Direction ~ ., data = weekly_train)
cutoff <- .5
# plot(mod_lda)
# predict the probability
pred_test_lda_all <- predict(mod_lda_all, newdata = weekly_test)
head(pred_test_lda_all$x) #linear discriminants of each observation
head(pred_test_lda_all$posterior) # matrix whose kth column contains the posterior probability that the corresponding observation belongs to the kth class
# head(pred_test_lda_all$class) #classified using a 50% posterior probability cutoff
# table(pred_test_lda_all$class) #predicted outcome
table(pred_test_lda_all$class, weekly_test$Direction) #contingency table of predicted (row) and true (column) outcome
mod_lda_all <- lda(Direction ~ . - Today, data = weekly_train)
cutoff <- .5
# plot(mod_lda)
# predict the probability
pred_test_lda_all <- predict(mod_lda_all, newdata = weekly_test)
head(pred_test_lda_all$x) #linear discriminants of each observation
head(pred_test_lda_all$posterior) # matrix whose kth column contains the posterior probability that the corresponding observation belongs to the kth class
# head(pred_test_lda_all$class) #classified using a 50% posterior probability cutoff
# table(pred_test_lda_all$class) #predicted outcome
table(pred_test_lda_all$class, weekly_test$Direction) #contingency table of predicted (row) and true (column) outcome
qda.fit$counts
qda.fit$ldet
qda.fit$means
qda.fit$terms
mod_lda_all <- lda(Direction ~ . - Today, data = weekly_train)
cutoff <- .5
# plot(mod_lda)
# predict the probability
pred_test_lda_all <- predict(mod_lda_all, newdata = weekly_test)
head(pred_test_lda_all$x) #linear discriminants of each observation
head(pred_test_lda_all$posterior) # matrix whose kth column contains the posterior probability that the corresponding observation belongs to the kth class
# head(pred_test_lda_all$class) #classified using a 50% posterior probability cutoff
# table(pred_test_lda_all$class) #predicted outcome
table(pred_test_lda_all$class, weekly_test$Direction) #contingency table of predicted (row) and true (column) outcome
mod_lda_all$terms
mod_lda_all <- lda(Direction ~ Lag1 + Lag2 + Lag3 + Lag4 + Lag5 + Volume + factor(Year), data = weekly_train)
cutoff <- .5
# plot(mod_lda)
# predict the probability
pred_test_lda_all <- predict(mod_lda_all, newdata = weekly_test)
mod_lda_all <- lda(Direction ~ Lag1 + Lag2 + Lag3 + Lag4 + Lag5 + Volume + Year, data = weekly_train)
cutoff <- .5
# plot(mod_lda)
# predict the probability
pred_test_lda_all <- predict(mod_lda_all, newdata = weekly_test)
head(pred_test_lda_all$x) #linear discriminants of each observation
head(pred_test_lda_all$posterior) # matrix whose kth column contains the posterior probability that the corresponding observation belongs to the kth class
# head(pred_test_lda_all$class) #classified using a 50% posterior probability cutoff
# table(pred_test_lda_all$class) #predicted outcome
table(pred_test_lda_all$class, weekly_test$Direction) #contingency table of predicted (row) and true (column) outcome
mod_lda_all <- lda(Direction ~ Lag1 + Lag2 + Lag3 + Lag4 + Lag5 + Volume, data = weekly_train)
cutoff <- .5
# plot(mod_lda)
# predict the probability
pred_test_lda_all <- predict(mod_lda_all, newdata = weekly_test)
head(pred_test_lda_all$x) #linear discriminants of each observation
head(pred_test_lda_all$posterior) # matrix whose kth column contains the posterior probability that the corresponding observation belongs to the kth class
# head(pred_test_lda_all$class) #classified using a 50% posterior probability cutoff
# table(pred_test_lda_all$class) #predicted outcome
table(pred_test_lda_all$class, weekly_test$Direction) #contingency table of predicted (row) and true (column) outcome
mod_lda_all <- lda(Direction ~ Lag1 + Lag2 + Lag3 + Lag4 + Lag5 + Volume + Year, data = weekly_train)
cutoff <- .5
# plot(mod_lda)
# predict the probability
pred_test_lda_all <- predict(mod_lda_all, newdata = weekly_test)
head(pred_test_lda_all$x) #linear discriminants of each observation
head(pred_test_lda_all$posterior) # matrix whose kth column contains the posterior probability that the corresponding observation belongs to the kth class
# head(pred_test_lda_all$class) #classified using a 50% posterior probability cutoff
# table(pred_test_lda_all$class) #predicted outcome
table(pred_test_lda_all$class, weekly_test$Direction) #contingency table of predicted (row) and true (column) outcome
mod_lda_all <- lda(Direction ~ Lag1 + Lag2 + Lag3 + Lag4 + Lag5 + Volume, data = weekly_train)
cutoff <- .5
# plot(mod_lda)
# predict the probability
pred_test_lda_all <- predict(mod_lda_all, newdata = weekly_test)
head(pred_test_lda_all$x) #linear discriminants of each observation
head(pred_test_lda_all$posterior) # matrix whose kth column contains the posterior probability that the corresponding observation belongs to the kth class
# head(pred_test_lda_all$class) #classified using a 50% posterior probability cutoff
# table(pred_test_lda_all$class) #predicted outcome
table(pred_test_lda_all$class, weekly_test$Direction) #contingency table of predicted (row) and true (column) outcome
mod_lda_lag <- lda(Direction ~ Lag1 + Lag2 + Lag3 + Lag4 + Lag5, data = weekly_train)
cutoff <- .5
# plot(mod_lda)
# predict the probability
pred_test_lda_lag <- predict(mod_lda_lag, newdata = weekly_test)
head(pred_test_lda_lag$x) #linear discriminants of each observation
head(pred_test_lda_lag$posterior) # matrix whose kth column contains the posterior probability that the corresponding observation belongs to the kth class
# head(pred_test_lda_lag$class) #classified using a 50% posterior probability cutoff
# table(pred_test_lda_lag$class) #predicted outcome
table(pred_test_lda_lag$class, weekly_test$Direction) #contingency table of predicted (row) and true (column) outcome
mod_lda_lag_int <- lda(Direction ~ Lag1*Lag2*Lag3*Lag4*Lag5, data = weekly_train)
cutoff <- .5
# plot(mod_lda)
# predict the probability
pred_test_lda_lag_int <- predict(mod_lda_lag_int, newdata = weekly_test)
# head(pred_test_lda_lag_int$x) #linear discriminants of each observation
# head(pred_test_lda_lag_int$posterior) # matrix whose kth column contains the posterior probability that the corresponding observation belongs to the kth class
# head(pred_test_lda_lag_int$class) #classified using a 50% posterior probability cutoff
# table(pred_test_lda_lag_int$class) #predicted outcome
table(pred_test_lda_lag_int$class, weekly_test$Direction) #contingency table of predicted (row) and true (column) outcome
mod_lda_lag_int <- lda(Direction ~ Lag1*Lag2 + Lag3*Lag4*Lag5, data = weekly_train)
cutoff <- .5
# plot(mod_lda)
# predict the probability
pred_test_lda_lag_int <- predict(mod_lda_lag_int, newdata = weekly_test)
# head(pred_test_lda_lag_int$x) #linear discriminants of each observation
# head(pred_test_lda_lag_int$posterior) # matrix whose kth column contains the posterior probability that the corresponding observation belongs to the kth class
# head(pred_test_lda_lag_int$class) #classified using a 50% posterior probability cutoff
# table(pred_test_lda_lag_int$class) #predicted outcome
table(pred_test_lda_lag_int$class, weekly_test$Direction) #contingency table of predicted (row) and true (column) outcome
mod_lda_lag_int <- lda(Direction ~ Lag1*Lag2 + Lag2*Lag3*Lag4*Lag5, data = weekly_train)
cutoff <- .5
# plot(mod_lda)
# predict the probability
pred_test_lda_lag_int <- predict(mod_lda_lag_int, newdata = weekly_test)
# head(pred_test_lda_lag_int$x) #linear discriminants of each observation
# head(pred_test_lda_lag_int$posterior) # matrix whose kth column contains the posterior probability that the corresponding observation belongs to the kth class
# head(pred_test_lda_lag_int$class) #classified using a 50% posterior probability cutoff
# table(pred_test_lda_lag_int$class) #predicted outcome
table(pred_test_lda_lag_int$class, weekly_test$Direction) #contingency table of predicted (row) and true (column) outcome
mod_lda_lag_int <- lda(Direction ~ Lag1*Lag2*Lag3*Lag4*Lag5, data = weekly_train)
cutoff <- .5
# plot(mod_lda)
# predict the probability
pred_test_lda_lag_int <- predict(mod_lda_lag_int, newdata = weekly_test)
# head(pred_test_lda_lag_int$x) #linear discriminants of each observation
# head(pred_test_lda_lag_int$posterior) # matrix whose kth column contains the posterior probability that the corresponding observation belongs to the kth class
# head(pred_test_lda_lag_int$class) #classified using a 50% posterior probability cutoff
# table(pred_test_lda_lag_int$class) #predicted outcome
table(pred_test_lda_lag_int$class, weekly_test$Direction) #contingency table of predicted (row) and true (column) outcome
mod_lda_lag_int <- lda(Direction ~ Lag1*Lag2 + Lag3*Lag4 + Lag5, data = weekly_train)
cutoff <- .5
# plot(mod_lda)
# predict the probability
pred_test_lda_lag_int <- predict(mod_lda_lag_int, newdata = weekly_test)
# head(pred_test_lda_lag_int$x) #linear discriminants of each observation
# head(pred_test_lda_lag_int$posterior) # matrix whose kth column contains the posterior probability that the corresponding observation belongs to the kth class
# head(pred_test_lda_lag_int$class) #classified using a 50% posterior probability cutoff
# table(pred_test_lda_lag_int$class) #predicted outcome
table(pred_test_lda_lag_int$class, weekly_test$Direction) #contingency table of predicted (row) and true (column) outcome
qda_lag_int <- qda(Direction ~ Lag1*Lag2 + Lag3*Lag4 + Lag5, data = weekly_train)
qda_lag_int
# predict the probability
pred_test_qda_int <- predict(qda_lag_int, newdata = weekly_test)
head(pred_test_qda_int$posterior)
head(pred_test_qda_int$class)
table(pred_test_qda_int$class, weekly_test$Direction)
qda_lag_int <- qda(Direction ~ Lag1*Lag2 + Lag3*Lag4 + Lag5*Volume, data = weekly_train)
qda_lag_int
# predict the probability
pred_test_qda_int <- predict(qda_lag_int, newdata = weekly_test)
head(pred_test_qda_int$posterior)
head(pred_test_qda_int$class)
table(pred_test_qda_int$class, weekly_test$Direction)
qda_lag_int <- qda(Direction ~ Lag1*Lag2 + Lag3*Lag4 + Lag5, data = weekly_train)
qda_lag_int
# predict the probability
pred_test_qda_int <- predict(qda_lag_int, newdata = weekly_test)
head(pred_test_qda_int$posterior)
head(pred_test_qda_int$class)
table(pred_test_qda_int$class, weekly_test$Direction)
qda_lag_int <- qda(Direction ~ Lag1*Lag2*Volume + Lag3*Lag4 + Lag5, data = weekly_train)
qda_lag_int
# predict the probability
pred_test_qda_int <- predict(qda_lag_int, newdata = weekly_test)
head(pred_test_qda_int$posterior)
head(pred_test_qda_int$class)
table(pred_test_qda_int$class, weekly_test$Direction)
qda_lag_int <- qda(Direction ~ Lag1*Lag2 + Lag3*Lag4 + Lag5, data = weekly_train)
qda_lag_int
# predict the probability
pred_test_qda_int <- predict(qda_lag_int, newdata = weekly_test)
head(pred_test_qda_int$posterior)
head(pred_test_qda_int$class)
table(pred_test_qda_int$class, weekly_test$Direction)
qda_lag_int <- qda(Direction ~ Lag1*Lag2 + Lag3*Lag4 + Lag*Lag5, data = weekly_train)
qda_lag_int <- qda(Direction ~ Lag1*Lag2 + Lag3*Lag4 + Lag1*Lag5, data = weekly_train)
qda_lag_int
# predict the probability
pred_test_qda_int <- predict(qda_lag_int, newdata = weekly_test)
head(pred_test_qda_int$posterior)
head(pred_test_qda_int$class)
table(pred_test_qda_int$class, weekly_test$Direction)
qda_lag_int <- qda(Direction ~ Lag1*Lag2 + Lag*Lag4 + Lag2*Lag3 + Lag2*Lag5 + Lag3*Lag4 + Lag3*Lag5 + Lag4*Lag5, data = weekly_train)
qda_lag_int <- qda(Direction ~ Lag1*Lag2 + Lag1*Lag4 + Lag2*Lag3 + Lag2*Lag5 + Lag3*Lag4 + Lag3*Lag5 + Lag4*Lag5, data = weekly_train)
qda_lag_int
# predict the probability
pred_test_qda_int <- predict(qda_lag_int, newdata = weekly_test)
head(pred_test_qda_int$posterior)
head(pred_test_qda_int$class)
table(pred_test_qda_int$class, weekly_test$Direction)
mod_glm_int_sig <- glm_int_sig(Direction ~ Lag1*Lag2 + Lag1*Lag4 + Lag2*Lag3 + Lag2*Lag5 + Lag3*Lag4 + Lag3*Lag5 + Lag4*Lag5, family = 'binomial', data = weekly_train)
mod_glm_int_sig <- glm(Direction ~ Lag1*Lag2 + Lag1*Lag4 + Lag2*Lag3 + Lag2*Lag5 + Lag3*Lag4 + Lag3*Lag5 + Lag4*Lag5, family = 'binomial', data = weekly_train)
cutoff <- .5
pred_test_glm_int_sig <- ifelse(predict(mod_glm_int_sig, newdata = weekly_test, type = 'response') > cutoff, 'Up', 'Down')
table(pred_test_glm_int_sig, weekly_test$Direction)
mod_lda_lag_int_sig <- lda(Direction ~Lag1*Lag2 + Lag1*Lag4 + Lag2*Lag3 + Lag2*Lag5 + Lag3*Lag4 + Lag3*Lag5 + Lag4*Lag5, data = weekly_train)
cutoff <- .5
# plot(mod_lda)
# predict the probability
pred_test_lda_lag_int_sig <- predict(mod_lda_lag_int_sig, newdata = weekly_test)
# head(pred_test_lda_lag_int_sig$x) #linear discriminants of each observation
# head(pred_test_lda_lag_int_sig$posterior) # matrix whose kth column contains the posterior probability that the corresponding observation belongs to the kth class
# head(pred_test_lda_lag_int_sig$class) #classified using a 50% posterior probability cutoff
# table(pred_test_lda_lag_int_sig$class) #predicted outcome
table(pred_test_lda_lag_int_sig$class, weekly_test$Direction) #contingency table of predicted (row) and true (column) outcome
qda_lag_int_sig <- qda(Direction ~ Lag1*Lag2 + Lag1*Lag4 + Lag2*Lag3 + Lag2*Lag5 + Lag3*Lag4 + Lag3*Lag5 + Lag4*Lag5, data = weekly_train)
qda_lag_int_sig
# predict the probability
pred_test_qda_int_sig <- predict(qda_lag_int_sig, newdata = weekly_test)
head(pred_test_qda_int_sig$posterior)
head(pred_test_qda_int_sig$class)
table(pred_test_qda_int_sig$class, weekly_test$Direction)
mod_glm_int_sig <- glm(Direction ~ Lag1*Lag2 + Lag1*Lag4 + Lag2*Lag3 + Lag2*Lag5 + Lag3*Lag4 + Lag3*Lag5 + Lag4*Lag5, family = 'binomial', data = weekly_train)
cutoff <- .5
pred_test_glm_int_sig <- ifelse(predict(mod_glm_int_sig, newdata = weekly_test, type = 'response') > cutoff, 'Up', 'Down')
table(pred_test_glm_int_sig, weekly_test$Direction)
mod_lda_lag_int_sig <- lda(Direction ~Lag1*Lag2 + Lag1*Lag4 + Lag2*Lag3 + Lag2*Lag5 + Lag3*Lag4 + Lag3*Lag5 + Lag4*Lag5, data = weekly_train)
cutoff <- .5
# plot(mod_lda)
# predict the probability
pred_test_lda_lag_int_sig <- predict(mod_lda_lag_int_sig, newdata = weekly_test)
# head(pred_test_lda_lag_int_sig$x) #linear discriminants of each observation
# head(pred_test_lda_lag_int_sig$posterior) # matrix whose kth column contains the posterior probability that the corresponding observation belongs to the kth class
# head(pred_test_lda_lag_int_sig$class) #classified using a 50% posterior probability cutoff
# table(pred_test_lda_lag_int_sig$class) #predicted outcome
table(pred_test_lda_lag_int_sig$class, weekly_test$Direction) #contingency table of predicted (row) and true (column) outcome
qda_lag_int_sig <- qda(Direction ~ Lag1*Lag2 + Lag1*Lag4 + Lag2*Lag3 + Lag2*Lag5 + Lag3*Lag4 + Lag3*Lag5 + Lag4*Lag5, data = weekly_train)
qda_lag_int_sig
# predict the probability
pred_test_qda_int_sig <- predict(qda_lag_int_sig, newdata = weekly_test)
# head(pred_test_qda_int_sig$posterior)
# head(pred_test_qda_int_sig$class)
table(pred_test_qda_int_sig$class, weekly_test$Direction)
mod_glm_int_sig <- glm(Direction ~ Lag1*Lag2 + Lag1*Lag4 + Lag2*Lag3 + Lag2*Lag5 + Lag3*Lag4 + Lag3*Lag5 + Lag4*Lag5, family = 'binomial', data = weekly_train)
cutoff <- .5
pred_test_glm_int_sig <- ifelse(predict(mod_glm_int_sig, newdata = weekly_test, type = 'response') > cutoff, 'Up', 'Down')
table(pred_test_glm_int_sig, weekly_test$Direction)
mod_lda_lag_int_sig <- lda(Direction ~Lag1*Lag2 + Lag1*Lag4 + Lag2*Lag3 + Lag2*Lag5 + Lag3*Lag4 + Lag3*Lag5 + Lag4*Lag5, data = weekly_train)
cutoff <- .5
# plot(mod_lda)
# predict the probability
pred_test_lda_lag_int_sig <- predict(mod_lda_lag_int_sig, newdata = weekly_test)
# head(pred_test_lda_lag_int_sig$x) #linear discriminants of each observation
# head(pred_test_lda_lag_int_sig$posterior) # matrix whose kth column contains the posterior probability that the corresponding observation belongs to the kth class
# head(pred_test_lda_lag_int_sig$class) #classified using a 50% posterior probability cutoff
# table(pred_test_lda_lag_int_sig$class) #predicted outcome
table(pred_test_lda_lag_int_sig$class, weekly_test$Direction) #contingency table of predicted (row) and true (column) outcome
qda_lag_int_sig <- qda(Direction ~ Lag1*Lag2 + Lag1*Lag4 + Lag2*Lag3 + Lag2*Lag5 + Lag3*Lag4 + Lag3*Lag5 + Lag4*Lag5, data = weekly_train)
# qda_lag_int_sig
# predict the probability
pred_test_qda_int_sig <- predict(qda_lag_int_sig, newdata = weekly_test)
# head(pred_test_qda_int_sig$posterior)
# head(pred_test_qda_int_sig$class)
table(pred_test_qda_int_sig$class, weekly_test$Direction)
broom::glance(qda_lag_int_sig)
?roc
library(pROC) # build a ROC curve
roc.glm <- roc(weekly_test$Direction, pred_test_glm_int_sig)
library(pROC) # build a ROC curve
roc.glm <- roc(weekly_test$Direction, predict(mod_glm_int_sig, newdata = weekly_test, type = 'response'))
plot(roc.glm,  col=1, print.auc=TRUE,main ="ROC curve -- Logistic Regression")
roc.lda <- roc(weekly_test$Direction, as.numeric(pred_test_lda_lag_int_sig$x))
plot(roc.lda,  print.auc=TRUE,
col=2,main ="ROC curve -- LDA" )
roc.qda <- roc(as.factor(weekly_test$Direction), pred_test_qda_int_sig$posterior[,2])
plot(roc.qda, print.auc=TRUE, col=3,main ="ROC curve -- QDA"  )
library(pROC) # build a ROC curve
roc.glm <- roc(weekly_test$Direction, predict(mod_glm_int_sig, newdata = weekly_test, type = 'response'))
plot(roc.glm,  col=1, print.auc=TRUE,main ="ROC curve -- Logistic Regression")
roc.lda <- roc(weekly_test$Direction, as.numeric(pred_test_lda_lag_int_sig$x))
plot(roc.lda,  print.auc=TRUE,
col=2,main ="ROC curve -- LDA" )
roc.qda <- roc(weekly_test$Direction), pred_test_qda_int_sig$posterior[,2])
library(pROC) # build a ROC curve
roc.glm <- roc(weekly_test$Direction, predict(mod_glm_int_sig, newdata = weekly_test, type = 'response'))
plot(roc.glm,  col=1, print.auc=TRUE,main ="ROC curve -- Logistic Regression")
roc.lda <- roc(weekly_test$Direction, as.numeric(pred_test_lda_lag_int_sig$x))
plot(roc.lda,  print.auc=TRUE,
col=2,main ="ROC curve -- LDA" )
roc.qda <- roc(weekly_test$Direction, pred_test_qda_int_sig$posterior[,2])
plot(roc.qda, print.auc=TRUE, col=3,main ="ROC curve -- QDA"  )
library(pROC) # build a ROC curve
par(las=F);par(mfrow=c(1,3))
roc.glm <- roc(weekly_test$Direction, predict(mod_glm_int_sig, newdata = weekly_test, type = 'response'))
plot(roc.glm,  col=1, print.auc=TRUE,main ="ROC curve -- Logistic Regression")
roc.lda <- roc(weekly_test$Direction, as.numeric(pred_test_lda_lag_int_sig$x))
plot(roc.lda,  print.auc=TRUE,
col=2,main ="ROC curve -- LDA" )
roc.qda <- roc(weekly_test$Direction, pred_test_qda_int_sig$posterior[,2])
plot(roc.qda, print.auc=TRUE, col=3,main ="ROC curve -- QDA"  )
library(pROC) # build a ROC curve
par(las=F);par(mfrow=c(1,1))
roc.glm <- roc(weekly_test$Direction, predict(mod_glm_int_sig, newdata = weekly_test, type = 'response'))
plot(roc.glm,  col=1, print.auc=TRUE,main ="ROC curve -- Logistic Regression")
roc.lda <- roc(weekly_test$Direction, as.numeric(pred_test_lda_lag_int_sig$x))
plot(roc.lda,  print.auc=TRUE,
col=2,main ="ROC curve -- LDA" )
roc.qda <- roc(weekly_test$Direction, pred_test_qda_int_sig$posterior[,2])
plot(roc.qda, print.auc=TRUE, col=3,main ="ROC curve -- QDA"  )
library(pROC) # build a ROC curve
par(las=F);par(mfrow=c(1,1))
roc.glm <- roc(weekly_test$Direction, predict(mod_glm_int_sig, newdata = weekly_test, type = 'response'))
plot(roc.glm,  col=1, print.auc=TRUE,main ="ROC curve -- Logistic Regression")
roc.lda <- roc(weekly_test$Direction, as.numeric(pred_test_lda_lag_int_sig$x))
lines(roc.lda,  print.auc=TRUE,
col=2,main ="ROC curve -- LDA" )
roc.qda <- roc(weekly_test$Direction, pred_test_qda_int_sig$posterior[,2])
lines(roc.qda, print.auc=TRUE, col=3,main ="ROC curve -- QDA"  )
library(pROC) # build a ROC curve
par(las=F);par(mfrow=c(1,1))
roc.glm <- roc(weekly_test$Direction, predict(mod_glm_int_sig, newdata = weekly_test, type = 'response'))
plot(roc.glm,  col=1, print.auc=TRUE,main ="ROC curve -- Logistic Regression")
roc.lda <- roc(weekly_test$Direction, as.numeric(pred_test_lda_lag_int_sig$x))
plot(roc.lda,  print.auc=TRUE,
col=2,main ="ROC curve -- LDA" )
roc.qda <- roc(weekly_test$Direction, pred_test_qda_int_sig$posterior[,2])
plot(roc.qda, print.auc=TRUE, col=3,main ="ROC curve -- QDA"  )
exp(-1)
source("~/Education/Biostats School/Fall 2023/Intro Statistical Learning/kaggle competition/Getting_Started_With_Prediction_20231117.R", echo=TRUE)
