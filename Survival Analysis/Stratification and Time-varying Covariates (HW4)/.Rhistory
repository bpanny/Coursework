data = act)
summary(fit.int1)
fit.int2 <- coxph(formula = Surv(time/365.25, censor) ~ tx*karnof + tx*cd4,
data = act)
summary(fit.int2)
fit.int3 <- coxph(formula = Surv(time/365.25, censor) ~ tx*karnof + cd4,
data = act)
summary(fit.int3)
fit.int4 <- coxph(formula = Surv(time/365.25, censor) ~ tx + karnof + cd4 + age*ivdrug,
data = act)
summary(fit.int4)
summary(fit.int4)
fit.int1 <- coxph(formula = Surv(time/365.25, censor) ~ tx*karnof + tx*cd4 + karnof*cd4,
data = act)
summary(fit.int1)
fit.int2 <- coxph(formula = Surv(time/365.25, censor) ~ tx*karnof + tx*cd4,
data = act)
summary(fit.int2)
fit.int3 <- coxph(formula = Surv(time/365.25, censor) ~ tx*karnof + cd4,
data = act)
summary(fit.int3)
sum.mv2
sum.mv2
sum.mv2
sum.mv2
fit.J3 <- mfp(Surv(time/365.25, censor) ~ tx + karnof + fp(age, df = 4, select = 0.05),
family = cox, data = act)
summary(fit.J3)
fit.J3 <- mfp(Surv(time/365.25, censor) ~ tx + karnof + cd4 + fp(age, df = 4, select = 0.05),
family = cox, data = act)
summary(fit.J3)
summary(fit.J2)
sum.mv2
knitr::opts_chunk$set(echo = TRUE)
# compute quartile and each mid-point
cd4.q <- quantile(act$cd4)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
act <- read_csv("actg320.csv")
names(act) <- tolower(names(act))
act <- act %>%
select(time, censor, tx, sex, ivdrug, karnof, cd4, priorzdv, age) %>%
mutate(sex = factor(if_else(sex == 1, "male", "female")),
ivdrug = factor(case_when(
ivdrug == 1 ~ "never",
ivdrug == 2 ~ "currently",
ivdrug == 3 ~ "previously",
.default = NA
), levels = c("never", "currently", "previously")),
karnof = factor(karnof,levels = c(70, 80, 90, 100)),
)
act
library(survival)
library(kableExtra)
fit.1 <- coxph(Surv(time/365.25, censor)~ tx, data=act)
fit.2 <- coxph(Surv(time/365.25, censor)~ sex, data=act)
fit.3 <- coxph(Surv(time/365.25, censor)~ ivdrug, data=act)
fit.4 <- coxph(Surv(time/365.25, censor)~ karnof, data=act)
fit.5 <- coxph(Surv(time/365.25, censor)~ cd4, data=act)
fit.6 <- coxph(Surv(time/365.25, censor)~ priorzdv, data=act)
fit.7 <- coxph(Surv(time/365.25, censor)~ age, data=act)
sum1 <- summary(fit.1)
sum2 <- summary(fit.2)
sum3 <- summary(fit.3)
sum4 <- summary(fit.4)
sum5 <- summary(fit.5)
sum6 <- summary(fit.6)
sum7 <- summary(fit.7)
rbind(sum1$coefficients, sum2$coefficients, sum3$coefficients, sum4$coefficients, sum5$coefficients, sum6$coefficients, sum7$coefficients) %>% kable() %>% kable_styling()
fit.mv1 <- coxph(Surv(time/365.25, censor)~ tx + ivdrug + karnof + cd4 + age, data=act)
sum.mv1 <- summary(fit.mv1)
sum.mv1
fit.mv2 <- coxph(Surv(time/365.25, censor)~ tx + karnof + cd4, data=act)
sum.mv2 <- summary(fit.mv2)
sum.mv2
anova(fit.mv1, fit.mv2)
pchisq(2*(fit.mv1$loglik[2]-fit.mv2$loglik[2]), df = 1, lower.tail=F)
fit.mv3 <- coxph(Surv(time/365.25, censor)~ tx + ivdrug + karnof + cd4, data=act)
sum.mv3 <- summary(fit.mv3)
fit.mv4 <- coxph(Surv(time/365.25, censor)~ tx + age + karnof + cd4, data=act)
sum.mv4 <- summary(fit.mv4)
anova(fit.mv1, fit.mv3)
anova(fit.mv1, fit.mv4)
anova(fit.mv3, fit.mv2)
anova(fit.mv4, fit.mv2)
confound_check <- as_tibble(
rbind(
sum.mv1$coefficients, sum.mv2$coefficients, sum.mv3$coefficients, sum.mv4$coefficients
) %>%
cbind(
coefficient = c(rownames(sum.mv1$coefficients), rownames(sum.mv2$coefficients), rownames(sum.mv3$coefficients), rownames(sum.mv4$coefficients))
) %>%
cbind(
model = c(rep("full", nrow(sum.mv1$coefficients)), rep("no_age_ivdrug", nrow(sum.mv2$coefficients)), rep("no_age", nrow(sum.mv3$coefficients)), rep("no_ivdrug", nrow(sum.mv4$coefficients)))
)
) %>%
mutate(coef = as.numeric(coef),
twenty_pct_lwr = ifelse(coef <= 0, 1.2*coef, .8*coef),
twenty_pct_upr = ifelse(coef <= 0, .8*coef, 1.2*coef),
twenty_pct_lwr = ifelse(model == "full", twenty_pct_lwr, NA),
twenty_pct_upr = ifelse(model == "full", twenty_pct_upr, NA)) %>%
group_by(coefficient) %>%
fill(twenty_pct_lwr, twenty_pct_upr) %>%
ungroup() %>%
mutate(within_twenty_pct_idx = if_else(between(coef, twenty_pct_lwr, twenty_pct_upr), T, F))
confound_check %>% filter(!within_twenty_pct_idx)
library(mfp)
fit.J1 <- mfp(Surv(time/365.25, censor) ~ tx + karnof + fp(cd4, df = 2, select = 0.05),
family = cox, data = act)
print(fit.J1)
fit.J2 <- mfp(Surv(time/365.25, censor) ~ tx + karnof + fp(cd4, df = 4, select = 0.05),
family = cox, data = act)
print(fit.J2)
summary(fit.J1); summary(fit.J2)
summary(fit.J1)
summary(fit.mv2)
act %>% ggplot(aes(x = (cd4 + .2)/100)) + geom_histogram()
fit.int1 <- coxph(formula = Surv(time/365.25, censor) ~ tx*karnof + tx*cd4 + karnof*cd4,
data = act)
summary(fit.int1)
fit.int2 <- coxph(formula = Surv(time/365.25, censor) ~ tx*karnof + tx*cd4,
data = act)
summary(fit.int2)
fit.int3 <- coxph(formula = Surv(time/365.25, censor) ~ tx*karnof + cd4,
data = act)
summary(fit.int3)
sum.mv2
# compute quartile and each mid-point
cd4.q <- quantile(act$cd4)
cd4.q.diff <- cd4.q[-1] - age.q[-5]
# compute quartile and each mid-point
cd4.q <- quantile(act$cd4)
cd4.q.diff <- cd4.q[-1] - cd4.q[-5]
cd4.q.mid <- cd4.q[-5] + 0.5*cd4.q.diff
cd4.q.mid <- c(cd4.q.mid[1],cd4.q.mid[-1]+0.5)
formula(fit.mv2)
# compute quartile and each mid-point
cd4.q <- quantile(act$cd4)
cd4.q.diff <- cd4.q[-1] - cd4.q[-5]
cd4.q.mid <- cd4.q[-5] + 0.5*cd4.q.diff
cd4.q.mid <- c(cd4.q.mid[1],cd4.q.mid[-1]+0.5)
act$cd4.c<-cut(act$cd4,cd4.q)
fit.age.c <- coxph(Surv(time/365.25, censor)~ cd4.c + tx + karnof, data = act)
fit.age.c
formula(fit.mv2)
# compute quartile and each mid-point
cd4.q <- quantile(act$cd4)
cd4.q.diff <- cd4.q[-1] - cd4.q[-5]
cd4.q.mid <- cd4.q[-5] + 0.5*cd4.q.diff
cd4.q.mid <- c(cd4.q.mid[1],cd4.q.mid[-1]+0.5)
act$cd4.c<-cut(act$cd4,cd4.q)
fit.cd4.c <- coxph(Surv(time/365.25, censor)~ cd4.c + tx + karnof, data = act)
fit.cd4.c
formula(fit.mv2)
# compute quartile and each mid-point
cd4.q <- quantile(act$cd4)
cd4.q.diff <- cd4.q[-1] - cd4.q[-5]
cd4.q.mid <- cd4.q[-5] + 0.5*cd4.q.diff
cd4.q.mid <- c(cd4.q.mid[1],cd4.q.mid[-1]+0.5)
act$cd4.c<-cut(act$cd4,cd4.q)
fit.cd4.c <- coxph(Surv(time/365.25, censor)~ cd4.c + tx + karnof, data = act)
fit.cd4.c
# Plot to examine the linearity assumption
plot(x = cd4.q.mid, y=c(0,cd4.c.beta), xlab="cd4 (Years)", ylab="Estimated Log Hazard",pch=19)
# compute quartile and each mid-point
cd4.q <- quantile(act$cd4)
cd4.q.diff <- cd4.q[-1] - cd4.q[-5]
cd4.q.mid <- cd4.q[-5] + 0.5*cd4.q.diff
cd4.q.mid <- c(cd4.q.mid[1],cd4.q.mid[-1]+0.5)
act$cd4.c<-cut(act$cd4,cd4.q)
fit.cd4.c <- coxph(Surv(time/365.25, censor)~ cd4.c + tx + karnof, data = act)
fit.cd4.c
cd4.c.beta <- fit.cd4.c$coeff[1:3]
# Plot to examine the linearity assumption
plot(x = cd4.q.mid, y=c(0,cd4.c.beta), xlab="cd4 (Years)", ylab="Estimated Log Hazard",pch=19)
lines(x = cd4.q.mid, y=c(0,cd4.c.beta),lty=1)
cd4.q.mid
cd4.q.mid[1]
cd4.q.mid[-1]
sum.J2
summary(fit.J2)
act$cd4.mfp <- (act$cd4 + 0.2)/100
# compute quartile and each mid-point
cd4.mfp.q <- quantile(act$cd4.mfp)
cd4.mfp.q.diff <- cd4.mfp.q[-1] - cd4.mfp.q[-5]
cd4.mfp.q.mid <- cd4.mfp.q[-5] + 0.5*cd4.mfp.q.diff
cd4.mfp.q.mid <- c(cd4.mfp.q.mid[1],cd4.mfp.q.mid[-1]+0.5)
act$cd4.mfp.c<-cut(act$cd4.mfp,cd4.mfp.q)
fit.cd4.mfp.c <- coxph(Surv(time/365.25, censor)~ cd4.mfp.c + tx + karnof, data = act)
fit.cd4.mfp.c
cd4.mfp.c.beta <- fit.cd4.mfp.c$coeff[1:3]
# Plot to examine the linearity assumption
plot(x = cd4.mfp.q.mid, y=c(0,cd4.mfp.c.beta), xlab="cd4.mfp (Years)", ylab="Estimated Log Hazard",pch=19)
lines(x = cd4.mfp.q.mid, y=c(0,cd4.mfp.c.beta),lty=1)
act$cd4.mfp <- (act$cd4 + 0.2)/100
# compute quartile and each mid-point
cd4.mfp.q <- quantile(act$cd4.mfp)
cd4.mfp.q.diff <- cd4.mfp.q[-1] - cd4.mfp.q[-5]
cd4.mfp.q.mid <- cd4.mfp.q[-5] + 0.5*cd4.mfp.q.diff
cd4.mfp.q.mid <- c(cd4.mfp.q.mid[1],cd4.mfp.q.mid[-1]+0.5)
act$cd4.mfp.c<-cut(act$cd4.mfp,cd4.mfp.q)
fit.cd4.mfp.c <- coxph(Surv(time/365.25, censor)~ cd4.mfp.c + tx + karnof, data = act)
fit.cd4.mfp.c
cd4.mfp.c.beta <- fit.cd4.mfp.c$coeff[1:3]
# Plot to examine the linearity assumption
plot(x = cd4.mfp.q.mid, y=c(0,cd4.mfp.c.beta), xlab="cd4.mfp (Years)", ylab="Estimated Log Hazard",pch=19)
lines(x = cd4.mfp.q.mid, y=c(0,cd4.mfp.c.beta),lty=1)
plot(x = cd4.q.mid, y=c(0,cd4.c.beta), xlab="cd4 (Years)", ylab="Estimated Log Hazard",pch=19)
lines(x = cd4.q.mid, y=c(0,cd4.c.beta),lty=1)
act$cd4.mfp <- (act$cd4 + 0.2)/100
# compute quartile and each mid-point
cd4.mfp.q <- quantile(act$cd4.mfp)
cd4.mfp.q.diff <- cd4.mfp.q[-1] - cd4.mfp.q[-5]
cd4.mfp.q.mid <- cd4.mfp.q[-5] + 0.5*cd4.mfp.q.diff
cd4.mfp.q.mid <- c(cd4.mfp.q.mid[1],cd4.mfp.q.mid[-1]+0.5)
act$cd4.mfp.c<-cut(act$cd4.mfp,cd4.mfp.q)
fit.cd4.mfp.c <- coxph(Surv(time/365.25, censor)~ cd4.mfp.c + tx + karnof, data = act)
fit.cd4.mfp.c
cd4.mfp.c.beta <- fit.cd4.mfp.c$coeff[1:3]
# Plot to examine the linearity assumption
plot(x = cd4.mfp.q.mid, y=c(0,cd4.mfp.c.beta), xlab="cd4.mfp", ylab="Estimated Log Hazard",pch=19)
lines(x = cd4.mfp.q.mid, y=c(0,cd4.mfp.c.beta),lty=1)
plot(x = cd4.q.mid, y=c(0,cd4.c.beta), xlab="cd4", ylab="Estimated Log Hazard",pch=19)
lines(x = cd4.q.mid, y=c(0,cd4.c.beta),lty=1)
sum.mv2
knitr::opts_chunk$set(echo = TRUE)
## Scaled score residual -- use type="dfbeta"
score.r<-resid(fit.J1,type="dfbeta")
par(mfrow=c(2,2))
dev.off()
plot(act$cd4.mfp,score.r[,1],xlab="cd4",ylab="Influence for cd4")
plot(act$karnof,score.r[,2],xlab="karnofsky performance",ylab="Influence for karnofsky performance")
plot(act$tx,score.r[,3],xlab="Treatment",ylab="Influence for Treatment")
score.r
fit.J1
act$karnof
sort(act$karnof)
score.r
score.r %>% head
library(tidyverse)
score.rM %>% head
score.r %>% head
act$karnof[act$karnof == 100]
## Scaled score residual -- use type="dfbeta"
score.r<-resid(fit.J1,type="dfbeta")
par(mfrow=c(3,2))
dev.off()
score.r
fit.J1
plot(act$cd4.mfp,score.r[,1],xlab="cd4",ylab="Influence for cd4")
plot(act$karnof[act$karnof==80],score.r[,2],xlab="karnofsky performance",ylab="Influence for karnofsky performance")
## Scaled score residual -- use type="dfbeta"
score.r<-resid(fit.J1,type="dfbeta")
par(mfrow=c(3,2))
dev.off()
fit.J1
plot(act$cd4.mfp,score.r[,1],xlab="cd4",ylab="Influence for cd4")
plot(act$karnof[act$karnof==80],score.r[,2],xlab="karnofsky performance",ylab="Influence for karnofsky performance")
score.r[,2]
score.r[,2] %>% idm
score.r[,2] %>% dim
score.r[,2] %>% length
length(act$karnof)
## Scaled score residual -- use type="dfbeta"
score.r<-resid(fit.J1,type="dfbeta")
par(mfrow=c(2,2))
dev.off()
fit.J1
plot(act$cd4.mfp,score.r[,1],xlab="cd4",ylab="Influence for cd4")
plot(act$karnof,score.r[,2],xlab="karnofsky performance",ylab="Influence for karnofsky performance")
plot(act$tx,score.r[,5],xlab="Treatment",ylab="Influence for Treatment")
## Scaled score residual -- use type="dfbeta"
score.r<-resid(fit.J1,type="dfbeta")
par(mfrow=c(2,2))
dev.off()
fit.J1
plot(act$cd4.mfp,score.r[,1],xlab="cd4",ylab="Influence for cd4")
plot(act$karnof,score.r[,3],xlab="karnofsky performance",ylab="Influence for karnofsky performance")
plot(act$tx,score.r[,5],xlab="Treatment",ylab="Influence for Treatment")
## Scaled score residual -- use type="dfbeta"
score.r<-resid(fit.J1,type="dfbeta")
par(mfrow=c(2,2))
dev.off()
fit.J1
plot(act$cd4.mfp,score.r[,1],xlab="cd4",ylab="Influence for cd4")
plot(act$karnof,score.r[,4],xlab="karnofsky performance",ylab="Influence for karnofsky performance")
plot(act$tx,score.r[,5],xlab="Treatment",ylab="Influence for Treatment")
## Scaled score residual -- use type="dfbeta"
score.r<-resid(fit.J1,type="dfbeta")
par(mfrow=c(3,2))
dev.off()
fit.J1
plot(act$cd4.mfp,score.r[,1],xlab="cd4",ylab="Influence for cd4")
plot(act$karnof,score.r[,2],xlab="karnofsky performance",ylab="Influence for karnofsky performance")
plot(act$karnof,score.r[,3],xlab="karnofsky performance",ylab="Influence for karnofsky performance")
plot(act$karnof,score.r[,4],xlab="karnofsky performance",ylab="Influence for karnofsky performance")
plot(act$tx,score.r[,5],xlab="Treatment",ylab="Influence for Treatment")
## Scaled score residual -- use type="dfbeta"
score.r<-resid(fit.J1,type="dfbeta")
par(mfrow=c(3,2))
dev.off()
fit.J1
plot(act$cd4.mfp,score.r[,1],xlab="cd4",ylab="Influence for cd4")
plot(act$karnof,score.r[,2],xlab="karnofsky performance",ylab="Influence for karnofsky performance = 80")
plot(act$karnof,score.r[,3],xlab="karnofsky performance",ylab="Influence for karnofsky performance  = 90")
plot(act$karnof,score.r[,4],xlab="karnofsky performance",ylab="Influence for karnofsky performance = 100")
plot(act$tx,score.r[,5],xlab="Treatment",ylab="Influence for Treatment")
## Scaled score residual -- use type="dfbeta"
score.r<-resid(fit.J1,type="dfbeta")
par(mfrow=c(3,2))
dev.off()
plot(act$cd4.mfp,score.r[,1],xlab="cd4",ylab="Influence for cd4")
plot(act$karnof,score.r[,2],xlab="karnofsky performance",ylab="Influence for karnofsky performance = 80")
plot(act$karnof,score.r[,3],xlab="karnofsky performance",ylab="Influence for karnofsky performance  = 90")
plot(act$karnof,score.r[,4],xlab="karnofsky performance",ylab="Influence for karnofsky performance = 100")
plot(act$tx,score.r[,5],xlab="Treatment",ylab="Influence for Treatment")
score.r
act %>% dim
influence(fit.J1)
act <- read_csv("actg320.csv")
act <- read_csv("actg320.csv")
names(act) <- tolower(names(act))
act
act %>% tail
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
act <- read_csv("actg320.csv")
names(act) <- tolower(names(act))
act <- act %>%
select(id, time, censor, tx, sex, ivdrug, karnof, cd4, priorzdv, age) %>%
mutate(sex = factor(if_else(sex == 1, "male", "female")),
ivdrug = factor(case_when(
ivdrug == 1 ~ "never",
ivdrug == 2 ~ "currently",
ivdrug == 3 ~ "previously",
.default = NA
), levels = c("never", "currently", "previously")),
karnof = factor(karnof,levels = c(70, 80, 90, 100)),
)
act
library(survival)
library(kableExtra)
fit.1 <- coxph(Surv(time/365.25, censor)~ tx, data=act)
fit.2 <- coxph(Surv(time/365.25, censor)~ sex, data=act)
fit.3 <- coxph(Surv(time/365.25, censor)~ ivdrug, data=act)
fit.4 <- coxph(Surv(time/365.25, censor)~ karnof, data=act)
fit.5 <- coxph(Surv(time/365.25, censor)~ cd4, data=act)
fit.6 <- coxph(Surv(time/365.25, censor)~ priorzdv, data=act)
fit.7 <- coxph(Surv(time/365.25, censor)~ age, data=act)
sum1 <- summary(fit.1)
sum2 <- summary(fit.2)
sum3 <- summary(fit.3)
sum4 <- summary(fit.4)
sum5 <- summary(fit.5)
sum6 <- summary(fit.6)
sum7 <- summary(fit.7)
rbind(sum1$coefficients, sum2$coefficients, sum3$coefficients, sum4$coefficients, sum5$coefficients, sum6$coefficients, sum7$coefficients) %>% kable() %>% kable_styling()
fit.mv1 <- coxph(Surv(time/365.25, censor)~ tx + ivdrug + karnof + cd4 + age, data=act)
sum.mv1 <- summary(fit.mv1)
sum.mv1
fit.mv2 <- coxph(Surv(time/365.25, censor)~ tx + karnof + cd4, data=act)
sum.mv2 <- summary(fit.mv2)
sum.mv2
anova(fit.mv1, fit.mv2)
pchisq(2*(fit.mv1$loglik[2]-fit.mv2$loglik[2]), df = 1, lower.tail=F)
fit.mv3 <- coxph(Surv(time/365.25, censor)~ tx + ivdrug + karnof + cd4, data=act)
sum.mv3 <- summary(fit.mv3)
fit.mv4 <- coxph(Surv(time/365.25, censor)~ tx + age + karnof + cd4, data=act)
sum.mv4 <- summary(fit.mv4)
anova(fit.mv1, fit.mv3)
anova(fit.mv1, fit.mv4)
anova(fit.mv3, fit.mv2)
anova(fit.mv4, fit.mv2)
confound_check <- as_tibble(
rbind(
sum.mv1$coefficients, sum.mv2$coefficients, sum.mv3$coefficients, sum.mv4$coefficients
) %>%
cbind(
coefficient = c(rownames(sum.mv1$coefficients), rownames(sum.mv2$coefficients), rownames(sum.mv3$coefficients), rownames(sum.mv4$coefficients))
) %>%
cbind(
model = c(rep("full", nrow(sum.mv1$coefficients)), rep("no_age_ivdrug", nrow(sum.mv2$coefficients)), rep("no_age", nrow(sum.mv3$coefficients)), rep("no_ivdrug", nrow(sum.mv4$coefficients)))
)
) %>%
mutate(coef = as.numeric(coef),
twenty_pct_lwr = ifelse(coef <= 0, 1.2*coef, .8*coef),
twenty_pct_upr = ifelse(coef <= 0, .8*coef, 1.2*coef),
twenty_pct_lwr = ifelse(model == "full", twenty_pct_lwr, NA),
twenty_pct_upr = ifelse(model == "full", twenty_pct_upr, NA)) %>%
group_by(coefficient) %>%
fill(twenty_pct_lwr, twenty_pct_upr) %>%
ungroup() %>%
mutate(within_twenty_pct_idx = if_else(between(coef, twenty_pct_lwr, twenty_pct_upr), T, F))
confound_check %>% filter(!within_twenty_pct_idx)
library(mfp)
fit.J1 <- mfp(Surv(time/365.25, censor) ~ tx + karnof + fp(cd4, df = 2, select = 0.05),
family = cox, data = act)
print(fit.J1)
fit.J2 <- mfp(Surv(time/365.25, censor) ~ tx + karnof + fp(cd4, df = 4, select = 0.05),
family = cox, data = act)
print(fit.J2)
summary(fit.J1); summary(fit.J2)
summary(fit.J1)
summary(fit.mv2)
act %>% ggplot(aes(x = (cd4 + .2)/100)) + geom_histogram()
fit.int1 <- coxph(formula = Surv(time/365.25, censor) ~ tx*karnof + tx*cd4 + karnof*cd4,
data = act)
summary(fit.int1)
fit.int2 <- coxph(formula = Surv(time/365.25, censor) ~ tx*karnof + tx*cd4,
data = act)
summary(fit.int2)
fit.int3 <- coxph(formula = Surv(time/365.25, censor) ~ tx*karnof + cd4,
data = act)
summary(fit.int3)
sum.mv2
# compute quartile and each mid-point
cd4.q <- quantile(act$cd4)
cd4.q.diff <- cd4.q[-1] - cd4.q[-5]
cd4.q.mid <- cd4.q[-5] + 0.5*cd4.q.diff
cd4.q.mid <- c(cd4.q.mid[1],cd4.q.mid[-1]+0.5)
act$cd4.c<-cut(act$cd4,cd4.q)
fit.cd4.c <- coxph(Surv(time/365.25, censor)~ cd4.c + tx + karnof, data = act)
fit.cd4.c
cd4.c.beta <- fit.cd4.c$coeff[1:3]
# Plot to examine the linearity assumption
plot(x = cd4.q.mid, y=c(0,cd4.c.beta), xlab="cd4", ylab="Estimated Log Hazard",pch=19)
lines(x = cd4.q.mid, y=c(0,cd4.c.beta),lty=1)
act$cd4.mfp <- (act$cd4 + 0.2)/100
# compute quartile and each mid-point
cd4.mfp.q <- quantile(act$cd4.mfp)
cd4.mfp.q.diff <- cd4.mfp.q[-1] - cd4.mfp.q[-5]
cd4.mfp.q.mid <- cd4.mfp.q[-5] + 0.5*cd4.mfp.q.diff
cd4.mfp.q.mid <- c(cd4.mfp.q.mid[1],cd4.mfp.q.mid[-1]+0.5)
act$cd4.mfp.c<-cut(act$cd4.mfp,cd4.mfp.q)
fit.cd4.mfp.c <- coxph(Surv(time/365.25, censor)~ cd4.mfp.c + tx + karnof, data = act)
fit.cd4.mfp.c
cd4.mfp.c.beta <- fit.cd4.mfp.c$coeff[1:3]
# Plot to examine the linearity assumption
plot(x = cd4.mfp.q.mid, y=c(0,cd4.mfp.c.beta), xlab="cd4.mfp", ylab="Estimated Log Hazard",pch=19)
lines(x = cd4.mfp.q.mid, y=c(0,cd4.mfp.c.beta),lty=1)
plot(x = cd4.q.mid, y=c(0,cd4.c.beta), xlab="cd4", ylab="Estimated Log Hazard",pch=19)
lines(x = cd4.q.mid, y=c(0,cd4.c.beta),lty=1)
## Scaled score residual -- use type="dfbeta"
score.r<-resid(fit.J1,type="dfbeta")
par(mfrow=c(3,2))
dev.off()
influentials <- tibble(cd4.mfp = act$cd4.mfp, karnof = act$karnof, tx = act$tx)
plot(act$cd4.mfp,score.r[,1],xlab="cd4",ylab="Influence for cd4")
plot(act$karnof,score.r[,2],xlab="karnofsky performance",ylab="Influence for karnofsky performance = 80")
plot(act$karnof,score.r[,3],xlab="karnofsky performance",ylab="Influence for karnofsky performance  = 90")
plot(act$karnof,score.r[,4],xlab="karnofsky performance",ylab="Influence for karnofsky performance = 100")
plot(act$tx,score.r[,5],xlab="Treatment",ylab="Influence for Treatment")
influentials %>%
ggplot(aes(x = cd4.mfp, y = cd4.inf, label = id)) +
geom_point() +
geom_label()
influentials <- tibble(cd4.mfp = act$cd4.mfp,
karnof = act$karnof,
tx = act$tx,
id = act$id,
cd4.inf = score.r[,1],
karnof80.inf = score.r[,2],
karnof90.inf = score.r[,3],
karnof100.inf = score.r[,4],
tx.inf = score.r[,5])
influentials %>%
ggplot(aes(x = cd4.mfp, y = cd4.inf, label = id)) +
geom_point() +
geom_label()
## Scaled score residual -- use type="dfbeta"
score.r<-resid(fit.J1,type="dfbeta")
par(mfrow=c(3,2))
dev.off()
influentials <- tibble(cd4.mfp = act$cd4.mfp,
karnof = act$karnof,
tx = act$tx,
id = act$id,
cd4.inf = score.r[,1],
karnof80.inf = score.r[,2],
karnof90.inf = score.r[,3],
karnof100.inf = score.r[,4],
tx.inf = score.r[,5])
influentials %>%
ggplot(aes(x = cd4.mfp, y = cd4.inf, label = id)) +
geom_point() +
geom_label() +
labs(x = 'cd4', y = 'cd4 influence')
influentials %>%
ggplot(aes(x = karnof, y = karnof80.inf, label = id)) +
geom_point() +
geom_label() +
labs(x = 'karnof', y = 'karnof80 influence')
influentials %>%
ggplot(aes(x = karnof, y = karnof90.inf, label = id)) +
geom_point() +
geom_label() +
labs(x = 'karnof', y = 'karnof90 influence')
influentials %>%
ggplot(aes(x = karnof, y = karnof100.inf, label = id)) +
geom_point() +
geom_label() +
labs(x = 'karnof', y = 'karnof100 influence')
influentials %>%
ggplot(aes(x = tx, y = tx.inf, label = id)) +
geom_point() +
geom_label() +
labs(x = 'tx', y = 'tx influence')
coxsnell.r <- act$censor-resid(fit.J1,type="martingale")
fitres <- survfit(Surv(coxsnell.r, act$censor)~1)
plot(fitres$time,-log(fitres$surv),type='s',xlab='Cox-Snell Residuals',
ylab='Estimated Cumulative Hazard Function')
abline(0,1,col='red',lty=2)
